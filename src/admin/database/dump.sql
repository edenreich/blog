--
-- PostgreSQL database dump
--

-- Dumped from database version 13.1 (Debian 13.1-1.pgdg100+1)
-- Dumped by pg_dump version 13.1 (Ubuntu 13.1-1.pgdg18.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: articles; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.articles (
    id bigint NOT NULL,
    uuid character varying(255),
    title character varying(255) NOT NULL,
    slug character varying(255) NOT NULL,
    meta_keywords character varying(255),
    meta_description character varying(255),
    content text NOT NULL,
    published_at timestamp without time zone,
    published boolean,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_by integer,
    updated_by integer
);


ALTER TABLE public.articles OWNER TO root;

--
-- Name: articles_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.articles ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.articles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_store; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.core_store (
    id bigint NOT NULL,
    key character varying(255),
    value text,
    type character varying(255),
    environment character varying(255),
    tag character varying(255)
);


ALTER TABLE public.core_store OWNER TO root;

--
-- Name: core_store_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.core_store ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_store_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: likes; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.likes (
    id bigint NOT NULL,
    uuid character varying(255) NOT NULL,
    reaction_type character varying(255),
    article bigint,
    session bigint,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_by integer,
    updated_by integer
);


ALTER TABLE public.likes OWNER TO root;

--
-- Name: likes_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.likes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.likes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: sessions; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.sessions (
    id bigint NOT NULL,
    uuid character varying(255) NOT NULL,
    ip_address character varying(255) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_by integer,
    updated_by integer
);


ALTER TABLE public.sessions OWNER TO root;

--
-- Name: sessions_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.sessions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.sessions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: strapi_administrator; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.strapi_administrator (
    id bigint NOT NULL,
    username character varying(255),
    email character varying(255) NOT NULL,
    password character varying(255),
    "resetPasswordToken" character varying(255),
    blocked boolean,
    firstname character varying(255),
    lastname character varying(255),
    "registrationToken" character varying(255),
    "isActive" boolean
);


ALTER TABLE public.strapi_administrator OWNER TO root;

--
-- Name: strapi_administrator_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.strapi_administrator ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.strapi_administrator_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: strapi_permission; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.strapi_permission (
    id integer NOT NULL,
    action character varying(255) NOT NULL,
    subject character varying(255),
    fields jsonb,
    conditions jsonb,
    role integer,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.strapi_permission OWNER TO root;

--
-- Name: strapi_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.strapi_permission_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.strapi_permission_id_seq OWNER TO root;

--
-- Name: strapi_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.strapi_permission_id_seq OWNED BY public.strapi_permission.id;


--
-- Name: strapi_role; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.strapi_role (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    code character varying(255) NOT NULL,
    description character varying(255),
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.strapi_role OWNER TO root;

--
-- Name: strapi_role_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.strapi_role_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.strapi_role_id_seq OWNER TO root;

--
-- Name: strapi_role_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.strapi_role_id_seq OWNED BY public.strapi_role.id;


--
-- Name: strapi_users_roles; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.strapi_users_roles (
    id integer NOT NULL,
    user_id integer,
    role_id integer
);


ALTER TABLE public.strapi_users_roles OWNER TO root;

--
-- Name: strapi_users_roles_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.strapi_users_roles_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.strapi_users_roles_id_seq OWNER TO root;

--
-- Name: strapi_users_roles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.strapi_users_roles_id_seq OWNED BY public.strapi_users_roles.id;


--
-- Name: strapi_webhooks; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.strapi_webhooks (
    id bigint NOT NULL,
    name character varying(255),
    url text,
    headers jsonb,
    events jsonb,
    enabled boolean
);


ALTER TABLE public.strapi_webhooks OWNER TO root;

--
-- Name: strapi_webhooks_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.strapi_webhooks ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.strapi_webhooks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: upload_file; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.upload_file (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    "alternativeText" character varying(255),
    caption character varying(255),
    width integer,
    height integer,
    formats jsonb,
    hash character varying(255) NOT NULL,
    ext character varying(255),
    mime character varying(255) NOT NULL,
    size numeric(10,2) NOT NULL,
    url character varying(255) NOT NULL,
    "previewUrl" character varying(255),
    provider character varying(255) NOT NULL,
    provider_metadata jsonb,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_by integer,
    updated_by integer
);


ALTER TABLE public.upload_file OWNER TO root;

--
-- Name: upload_file_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.upload_file ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.upload_file_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: upload_file_morph; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.upload_file_morph (
    id bigint NOT NULL,
    upload_file_id bigint,
    related_id bigint,
    related_type text,
    field text,
    "order" bigint
);


ALTER TABLE public.upload_file_morph OWNER TO root;

--
-- Name: upload_file_morph_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public.upload_file_morph ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.upload_file_morph_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users-permissions_permission; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public."users-permissions_permission" (
    id bigint NOT NULL,
    type character varying(255) NOT NULL,
    controller character varying(255) NOT NULL,
    action character varying(255) NOT NULL,
    enabled boolean NOT NULL,
    policy character varying(255),
    role integer,
    created_by integer,
    updated_by integer
);


ALTER TABLE public."users-permissions_permission" OWNER TO root;

--
-- Name: users-permissions_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public."users-permissions_permission" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."users-permissions_permission_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users-permissions_role; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public."users-permissions_role" (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    description character varying(255),
    type character varying(255),
    created_by integer,
    updated_by integer
);


ALTER TABLE public."users-permissions_role" OWNER TO root;

--
-- Name: users-permissions_role_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public."users-permissions_role" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."users-permissions_role_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users-permissions_user; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public."users-permissions_user" (
    id bigint NOT NULL,
    username character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    provider character varying(255),
    password character varying(255),
    "resetPasswordToken" character varying(255),
    confirmed boolean,
    blocked boolean,
    role bigint,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "confirmationToken" character varying(255),
    created_by integer,
    updated_by integer
);


ALTER TABLE public."users-permissions_user" OWNER TO root;

--
-- Name: users-permissions_user_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

ALTER TABLE public."users-permissions_user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."users-permissions_user_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: strapi_permission id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_permission ALTER COLUMN id SET DEFAULT nextval('public.strapi_permission_id_seq'::regclass);


--
-- Name: strapi_role id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_role ALTER COLUMN id SET DEFAULT nextval('public.strapi_role_id_seq'::regclass);


--
-- Name: strapi_users_roles id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_users_roles ALTER COLUMN id SET DEFAULT nextval('public.strapi_users_roles_id_seq'::regclass);


--
-- Data for Name: articles; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.articles (id, uuid, title, slug, meta_keywords, meta_description, content, published_at, published, created_at, updated_at, created_by, updated_by) FROM stdin;
1	\N	Build your own Kubernetes Cluster with K3S	build-your-own-kubernetes-cluster-with-k3s	k3s, kubernetes, cluster, raspberry pi, pi	Build your own Kubernetes Cluster with K3S	 Creating your own kubernetes cluster on raspberry pi doesn't take much effort and it was a fun experience, in fact this blog at the time of writing this article is hosted on home made kubernetes. In this article i'm going to walk you throught the process of having a production ready environment at your home.\n<br/>\n<br/>\n\n![raspberry_pi_cluster-min](https://admin.eden-reich.com/uploads/raspberry_pi_cluster-min_93bc7dd448.jpeg)\n\n### Prerequisite\n\nYou'll need to purchase the following equipment in order to follow along (budget of around 600$, on the long run it pays off):\n\n- 1x [Intelinet Socket Strips](https://www.amazon.de/gp/product/B01GUXUG3G/) approx. 30$\n- 1x [Gifort Energy Cost Meter](https://www.amazon.de/gp/product/B07D7NKYQ3/) approx. 15$\n- 1x [NETGEAR 8 port network switch](https://www.idealo.de/preisvergleich/OffersOfProduct/56755.html) approx. 35$\n- 4x [Raspberry pi's 4 Model B](https://www.idealo.de/preisvergleich/OffersOfProduct/6628224_-4-model-b-4gb-raspberry-pi-foundation.html) approx. 65$/piece\n- 4x [Samsung EVO Plus 128GB microSD cards](https://www.idealo.de/preisvergleich/OffersOfProduct/5514884_-evo-plus-2017-microsdxc-128gb-mb-mc128ga-samsung.html) approx 23$/piece\n- 5x [Cat 7 with length of 75cm lan cables](https://www.idealo.de/preisvergleich/Typ/4061474034560.html) approx. 7$/piece\n- 4x [USB type-A to type-C cables](https://www.amazon.de/dp/B07D7S4SLL/) approx. 8$/piece\n- 2x [AmazonBasics  USB hubs](https://www.amazon.de/dp/B076YNV36K/) approx. 50$/piece\n- 1x [Raspberry pi acrylic tower](https://www.amazon.de/dp/B07Y8VG933/?smid=A2HSFPQG9EH8HP) approx. 20$\n<br/>\n<br/>\n\nYou would also need a cloudflare account, so we can put it infront of our cluster entry for higher security, and a single domain name registered. Personally I like [www.hover.com](https://www.hover.com/), they have good range of servers across the globe which means less time resolving your ip address, I also like their service. feel free however to purchase your domain by any other dns provider.\n\n<br/>\n<br/>\n\nP.S: I'm not commiting to any of the above prices and dealers please make your own decisions regarding the purchase, these links are just to give you an idea of what I'm using to make it work.\n\n\n### Getting Started\nOnce your order with all of these parts arrived we can start by building the cluster.\n<br/>\n<br/>\n\n\n#### Build and prepare the hardware\n\nLet's place each raspberry pi on the raspberry pi tower and ensure all screws are tighten.\n<br/>\n<br/>\n\n![raspberry_pi_cluster-min](https://admin.eden-reich.com/uploads/Raspberry_pi_tower-min_f0e62c5a02.jpeg)\n\n<br/>\n<br/>\n\n#### Power supply\nTo messure our monthly energy costs we'll first connect the **Gifort Energy Cost Meter** to one of our socket in the house (near to our home router). Then we'll connect to the socket of the Cost Meter our **Intelinet Socket Strips**, that way we can messure the total cost / consumption of whatever we plug into these sockets.\n\nAfter we have a base where we can plugin different sockets, we'll take the **AmazonBasics  USB hubs** and supply them with electricity from our above mentioned setup, connect them to the sockets and place them near the **Raspberry pi acrylic tower**.\n\nAs a next step we'll prepare the cables for powering up the pi's, let's take the **USB type-A to type-C cables** and plug them into the USB slots where there is a small sign of battery near it, These our the only output that actually supplies electricty from our socket, the rest are just for connecting it to other devices (feels like waste to have so many USB inputs that do not supply power from the socket, but that's what I could find).\n\n<br/>\n<br/>\n\n#### Connectivity / Networking\nLet's take our **NETGEAR 8 port network switch** and connect it to the router using one of our extra **cat 7 cable**, you can use any of the ports of the switch (you could use the first port for example) and plug it into one of the LAN entries of the home router. The switch should also be connected to the power supply so let's connect it to one of our available sockets and place the switch near the pi's, Now that our switch is connected to the home router, whatever we connect to our switch and after router portforwarding will be available to the public internet.\n\nLet's connect all the pi's using **cat 7 cables** to our above mentioned switch. They are still not publicly available, we'll have to configure our home router, but I'll prefer to do this part at the end of the setup, once we have an stable internal cluster networking in place, we'll then direct traffic to our kubernetes ingress the traffic.\n\n<br/>\n<br/>\n\n#### Burn a Disk image\nLet's install a light weight OS for raspberry, we'll download [Raspberry Buster Lite](https://downloads.raspberrypi.org/raspbian_lite_latest) image from the offical [raspberrypi.org](https://raspberrypi.org) website.\n\nAfter download completed all we have to do is to install the OS image on our microSD cards using our home computer. There are plenty of tutorial about how to achieve that and it's different steps depending on the OS you are using at home, so I'm not going to go here into details, please feel free to checkout the offical [documentation] (https://www.raspberrypi.org/documentation/installation/installing-images/) on how to do that.\n\nNow that we have on our microSD cards with bootable OS installed on them, we would want to add an empty file called **ssh** on the root directory of each microSD card, so ssh would be enabled by default when we bootstrap our pi's. We can now just connect all of the SD cards to the pi's.\n\n<br/>\n<br/>\n\n#### Setting up the pi's\nAfter section  **Power supply** is finished, we can now start all pi's one after the other, let's connect the **USB type-C cables** to our pi's and let them boot up. We'll need an **ssh client** installed on our home working station (our latptop / desktop), so we can connect to these pi's. Because my hostmachine OS is Windows what I normally like to do, is to create an **Ubuntu VM** with **Hyper-V**, but that's my personal preference, you can still use **PuTTy on windows**, but I do recommend you to have a unix distrubtion so we can control the kubernetes cluster in a consistent way from our working station (If your hostmachine is already one of the unix distrubtion out there feel free to forget whatever I've just mentions). For the sake of this tutorial I would assume your working station is Ubuntu.\n\nFirst what I like to do is identify the pi's on my home router by names, rather than remembering ip address of each one, so let's go into our router configuration (normallly by going to the following web address in your favorite browser **http://192.168.1.1**).\nYou could also figure all connected devices to your network by installing a commandline utility called **nmap** and run a simple command on your network internal ip range(often called **CIDR/Netmask**):\n\n```sh\nsudo apt-get install nmap\nsudo nmap -sn 192.168.1.0/24\n```\n\nThis command output should give you all Ip addresses connected to your network default interface, If you still can't determine which pi is which on which address, you could also disconnect all of them and connect them to power cable one after the other to figure out what pi get what ip address, later we'll also setup static ip's so even if we reboot them the pi's will remain with the same ip address.\n\nFrom our working station let's copy our ssh public key to the authorized_keys on the remote pi's so we can access them (If you don't have an ssh key generated yet, you could do that on your working station using the following command ssh-keygen, do make sure you use passphrase), to copy the ssh pub key you could simply run:\n\n```sh\nssh-copy-id pi@[first-pi-ip-address]\n```\n\nThis will prompt you to enter a password, type **raspberry**, and your ssh public key should be copied over to the remote machine, now we can ssh this pi.\n\n```sh\nssh pi@[first-pi-ip-address]\n```\n\nOkay we're now on the remote pi machine, first thing first let's update the packages run:\n\n```sh\nsudo apt-get update\n```\n\nSecondly let's disable password authentication on our ssh daemon configuration:\n\n```sh\nsudo vi /etc/ssh/sshd_config\n```\n\nlook for **#PasswordAuthentication yes** uncomment this line and set it to no **PasswordAuthentication no** and save the configuration file.\nFinally restart the ssh dameon for the changes to take affect:\n\n```sh\nsudo systemctl restart sshd\n```\n\nThat's it, it is now no longer possible to connect to this remote machine with password over ssh, this hardened the security a little bit.\n\nNow that we have minimal security in place, what I normally like to do is give each machine an hostname so we can communicate with this machine not only by ip address rather than by a name that is easier to remember, let's run:\n\n```sh\nsudo raspi-config\n```\n\nYou should be prompt with an terminal GUI, let's go to **Network Options > Hostname** and give this first pi a name, something like **k3s-master** would be ideal, you can however call it whatever is easier for you to recognize, give it a meaningful name as you would call the control plane node in kubernetes setup.\n\nSame process we can repeat with the other 3 left pi's, the only different step would be the hostname, I normally give them names like **k3s-node1**, **k3s-node2** and **k3s-node3**\n\nWe are almost done with this part, let's configure static ip, to do that let's create a file **/etc/network/interfaces.d/k3s-master**:\n\n```sh\ninterface eth0\nstatic ip_address=192.168.1.6/24\nstatic routers=192.168.1.1\nstatic domain_name=192.168.1.1\n```\n\nSame goes for the other nodes the only thing that is changes and should be incremented is the ip_address part and the file name, so for example on **k3s-node1** we'll create a file on the same path called k3s-node1 with the following content:\n\n```sh\ninterface eth0\nstatic ip_address=192.168.1.7/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1\n```\n\nAnd so on...\nBefore reboot let's also check our pi's **/boot/cmdline.txt** if it does not contain:\n\n```sh\ncgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\n```\n\nMake sure to add these to your pi.\n\nWhen all done, we can reboot all the pi's, and ensure they still using the given ip address and not some random assigned.\n\nNow we can also modify our /etc/hosts on the working station to something like:\n\n```sh\n192.168.1.6 k3s-master\n192.168.1.7 k3s-node1 \n192.168.1.8 k3s-node2\n192.168.1.9 k3s-node3\n```\n\nIn addition what I like to do is to add an **~/ssh/config** file on my working station with the following content:\n\n```sh\nHost k3s-*\n  User pi\n  IdentityFile ~/.ssh/id_rsa\n```\n\nso it's easier to ssh to one of these machine when needed, instead of typing **ssh pi@k3s-node1** you could now just type **ssh k3s-node1** for example. \n\n<br/>\n<br/>\n\n#### Installing Kubernetes Control Plane\n\nNow that we've our pi's ready and remotely accessable we can proceed with kubernetes installation, this is the easiest part of this entire tutorial, thanks to rancher project that made the installation process highly customizeable and fairly straightforward. On the **k3s-master** first install docker:\n\n```sh\ncurl -sSL https://get.docker.com | -- sh\nsudo usermod -aG docker $USER\ndocker info\n```\n\nThen we can proceed with installing k3s server (kubernetes control plane) with customized options:\n\n```sh\ncurl -sSL https://get.k3s.io | INSTALL_K3S_EXEC='server --docker --no-deploy traefik' sh -\n```\nExplanation - we're running an installation script from rancher and configuring the server to use docker runtime instead of containerd, we also telling the installer to not deploy traefik as are ingress, I prefer to use nginx ingress instead.\n\nAfter this is done, we should be able to connect to that cluster from **k3s-master** to verify it you can try:\n\n```sh\nsudo kubectl cluster-info\n```\n\nYou should see similar output:\n\n```sh\nKubernetes master is running at https://127.0.0.1:6443\nCoreDNS is running at https://127.0.0.1:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\nMetrics-server is running at https://127.0.0.1:6443/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy\n```\n\nWe don't want to type sudo everytime we want to access the cluster so let's copy the **kubernetes config file** over to our working station and place it in our **~/.kube/config**, to do that we first need to copy **/etc/rancher/k3s/k3s.yaml** to **~/.kube/config**:\n\n```sh\nsudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config\n```\n\nNow exit the **k3s-master** and on the working station copy the kubernetes config file over:\n\n```sh\nscp pi@k3s-master:/home/pi/.kube/config /home/$USER/.kube/config\n```\n\nIf we try now on our working station to run **kubectl cluster-info** we might see kubectl command not found, because we haven't installed it on our working station yet, we need to install this client:\n\n```sh\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nsudo mv ./kubectl /usr/local/bin/kubectl\n```\n\nIf we still try to run from our working station **kubectl cluster-info** we'll get a different error, connection error, this is because we need to modify our kubernetes configuration:\n\n```sh\nvi  ~/.kube/config\n```\n\nAnd replace **clusters\\[0\\].cluster.server** instead of **[https://127.0.0.1:6443](#)** to **[https://k3s-master:6443](#)** sense we no longer communicating the cluster from within the k3s-master, rather than we are communicating with this cluster remotely from our working station.\nAlright to verify our remote connection works as expected let's run:\n\n```sh\nkubectl cluster-info\n```\n\nWe should now see the following output:\n\n```sh\nKubernetes master is running at https://k3s-master:6443\nCoreDNS is running at https://k3s-master:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\nMetrics-server is running at https://k3s-master:6443/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy\n```\n\nWe installed our control plane sucessfully if you see this output, we now need to install the **agents** / **worker nodes**. First let's verify that we have no worker nodes in our cluster:\n\n```sh\nkubectl get nodes\n```\n\nWe should see a similar output:\n\n```sh\nNAME         STATUS   ROLES    AGE   VERSION\nk3s-master   Ready    master   5m    v1.17.4+k3s1\n```\n\nWhat I normally like to do during the process of adding more worker nodes is to open a separate terminal session and watch them joining into the cluster, to do that run the following command:\n\n```sh\nwatch kubectl get nodes\n```\n\n<br/>\n<br/>\n\n#### Installing Kubernetes Worker Nodes\n\nFirst let's install docker on all of the worker nodes:\n\n```sh\nfor $nr in {1..3} \\\ndo \\\n  ssh -t pi@k3s-node${nr} "curl -sSL https://get.docker.com | sh && sudo usermod -aG docker \\$USER" \\\ndone\n```\n\nInstalling the agents is also pretty straightforward by issuing one liner command, but first we need to grab the api token from the **k3s-master**:\n\n```sh\nssh -t k3s-master "sudo cat /var/lib/rancher/k3s/server/token"\n```\nCopy that **API token**, replace in the following command the value of **K3S_TOKEN** with that token and then run the following command on each worker node (**k3s-node1**, **k3s-node2** and **k3s-node3**), like so:\n\n```sh\nfor $nr in {1..3} \\\ndo \\\n  ssh -t pi@k3s-node${nr} "curl -sSL https://get.k3s.io | INSTALL_K3S_EXEC='agent --docker' K3S_URL='https://k3s-master:6443' K3S_TOKEN='[above-mentioned-api-token-string]' sh -" \\\ndone\n```\n\nNow while this process is running you can inspect the other terminal session mentioned above and start to see how the node workers are joining into the cluster.\n\nThe final output should looks something similar to:\n\n```sh\nNAME         STATUS   ROLES    AGE   VERSION\nk3s-master   Ready    master   10m   v1.17.4+k3s1\nk3s-node1    Ready    -        3m    v1.17.4+k3s1\nk3s-node2    Ready    -        2m    v1.17.4+k3s1\nk3s-node3    Ready    -        1m    v1.17.4+k3s1\n```\n\nYou probably figured there is a small issue here, **k3s-node1**, **k3s-node2** and **k3s-node3** does not have any ROLE assigned, this is a simple fix, just set their label with the following command:\n\n```sh\nfor $nr in {1..3} \\\ndo \\\n  kubectl label nodes/k3s-node${nr} node-role.kubernetes.io/worker=worker \\\ndone\n```\n\nIf you now inspect it again you would see:\n```sh\nNAME         STATUS   ROLES    AGE   VERSION\nk3s-master   Ready    master   10m    v1.17.4+k3s1\nk3s-node1    Ready    worker    3m    v1.17.4+k3s1\nk3s-node2    Ready    worker    2m    v1.17.4+k3s1\nk3s-node3    Ready    worker    1m    v1.17.4+k3s1\n```\n\nOk so now we have a proper functioning cluster. If you recall previously we mentioned that we don't want to install traefik that is shipped with k3s by default, so the only missing part in our cluster is the nginx ingress, for deploying this we would use helm chart (Package manager of kubernetes).\n\nFirst let's install helm 3 client on our working station:\n```sh\ncurl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | sh\n```\n\nThen let's add stable repo to the list of repos:\n```sh\nhelm repo add stable https://kubernetes-charts.storage.googleapis.com\n```\n\nLastly let's install the ingress in kube-system namespace and specify that we want to use the image for ARM architecture. \n```sh\nhelm install nginx-ingress stable/nginx-ingress \\\n  --set controller.image.repository=quay.io/kubernetes-ingress-controller/nginx-ingress-controller-arm \\\n  --set controller.image.tag="0.30.0" \\\n  --set defaultBackend.image.repository=k8s.gcr.io/defaultbackend-arm \\\n  --set controller.publishService.enabled=true \\\n  --namespace kube-system\n```\n\nIf we now inspect our services in the cluster, we should see a similar output(ip addresses and ports may vary):\n\n```sh\nNAMESPACE     NAME                            TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE\ndefault       kubernetes                      ClusterIP      10.43.0.1       <none>        443/TCP                      15m\nkube-system   kube-dns                        ClusterIP      10.43.0.10      <none>        53/UDP,53/TCP,9153/TCP       15m\nkube-system   metrics-server                  ClusterIP      10.43.19.77     <none>        443/TCP                      15m\nkube-system   nginx-ingress-default-backend   ClusterIP      10.43.51.252    <none>        80/TCP                       1m\nkube-system   nginx-ingress-controller        LoadBalancer   10.43.168.244   192.168.1.8   80:31445/TCP,443:31743/TCP   1m\n```\n\nNote we now have two new  services, **nginx-ingress-default-backend** as internal **ClusterIP** and **nginx-ingress-controller** as **LoadBalancer**, the Loadbalancer recieves the ip address of one of the worker nodes and uses that as the external ip where we could reach from outside of the cluster.\n\nSo we have a service of type Loadbalancer but that isn't enough for redirecting traffic on a larger scale, we need to deploy another kubernetes object called Ingress, which will redirect traffic based on DNS rules to internal services of type **ClusterIp**.\nlet's deploy our Ingress kubernetes object:\n\n```yaml\n// ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: default\n  namespace: kube-system\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/proxy-body-size: "50m"\nspec:\n  tls:\n  - hosts:\n    - www.my-awesome-site.com\n    secretName: www.my-awesome-site.com-tls\n  rules:  \n    - host: my-awesome-site.com\n      http:\n        paths:\n        - path: /\n          backend:\n            serviceName: nginx-ingress-default-backend\n            servicePort: 80\n    - host: www.my-awesome-site.com\n      http:\n        paths:\n        - path: /\n          backend:\n            serviceName: nginx-ingress-default-backend\n            servicePort: 80\n```\n\nNote that here we specify that we want any traffic that hits our cluster external ip on port **443** would be redirected to a backend service, in this case I've just specified that we want to redirect traffic to **nginx-ingress-default-backend** service on port 80 if they ask our cluster with the following **www.my-awesome-site.com** or **my-awesome-site.com** hostname.\nYou might wondering what's the tls section means, well there we only referencing our ssl certificate that we could get for free using cloudflare. We just need to create this secret kubernetes object before we apply this manifest. So let's quickly do that.\nLet's login into cloudflare and download our ssl keys (.key and .pem files). In cloudflare go to **SSL/TLS > Create Certificate** leave everything as default just specify the hostnames you want to request this certificate for ***.my-awesome-site.com** and **my-awesome-site.com** once that is down you should be able to download the **.key** and **.pem** files, keep them somewhere safe.\nNow that we have these files let's import them as a secret in our cluster, run:\n\n```sh\nkubectl -n kube-system create secret tls my-awesome-site.com-tls --key path-to-key-file.key --cert path-to-pem-file.pem\n```\nOk, so we now have our ssl certificate imported, let's apply the Ingress manifest mentioned above:\n\n```sh\nkubectl apply -f ingress.yaml\n```\n\nWe're almost done, we just need to tell configure our home router and tell cloudflare to direct traffic to our public ip on port 80 and 443.\nIn cloudflare let's go to **DNS > DNS management for my-awesome-site.com** and add 2 A records there:\n\n<table style="border: 1px solid #e4e4e4;text-align: center">\n<thead>\n  <tr>\n    <th  style="border: 1px dotted #e4e4e4;padding: 10px">Type</th>\n    <th  style="border: 1px dotted #e4e4e4;padding: 10px">Name</th>\n    <th  style="border: 1px dotted #e4e4e4;padding: 10px">Content</th>\n    <th  style="border: 1px dotted #e4e4e4;padding: 10px">TTL</th>\n    <th  style="border: 1px dotted #e4e4e4;padding: 10px">Proxy Status</th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">A</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">my-awesome-site.com</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">[your-public-ip-here]</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">Auto</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">Poxied</td>\n  </tr>\n  <tr>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">A</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">www.my-awesome-site.com</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">[your-public-ip-here]</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">Auto</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">Poxied</td>\n  </tr>\n</tbody>\n</table>\n\nNote: to figure out what's the public ip address you got from your ISP you can simply call the following url: https://ifconfig.me/ip\n\n<br/>\n\nWe also need to add the nameservers of our domain provider(where we registered that domain), so in **Cloudflare > DNS > Cloudflare nameservers** let's enter the nameservers we got from our domain provider:\n\n<table style="border: 1px solid #e4e4e4;text-align: center">\n<thead>\n  <tr>\n    <th  style="border: 1px dotted #e4e4e4;padding: 10px">Type</th>\n    <th  style="border: 1px dotted #e4e4e4;padding: 10px">Value</th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">NS</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">some.ns.from.domain.provider</td>\n  </tr>\n  <tr>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">NS</td>\n    <td  style="border: 1px dotted #e4e4e4;padding: 10px">some.ns.from.domain.provider</td>\n  </tr>\n</tbody>\n</table>\n\n<br/>\n\nOk so now all there is left to do is to configure port-forwarding on our home router, simply type the following address in your browser: http://192.168.1.1\n\nGo to **Network** section and then look for **Port-Forwarding**, let's forward port 80 to [X]:80 and port 443 to [X]:443 where the **X** is the ip address of our cluster Ingress, we can figure out from our cluster, by issuing the following command:\n\n```sh\nkubectl get ingress -A\n```\n\nYou should see one ingress object as the following:\n\n```sh\nNAMESPACE     NAME          HOSTS                                         ADDRESS       PORTS     AGE\nkube-system   default       www.my-awesome-site.com,my-awesome-site.com   192.168.1.8   80, 443   25m\n```\n\nIn the above mentioned output we know it's 192.168.1.8, let's use it in our home router. So portforward rules would be:\n\n```sh\nHTTP => 80 => 192.168.1.8:80 \nHTTPS => 443 => 192.168.1.8:443\n```\n\nWe're done, if you now call your domain, you should see **default backend** output in the browser as https. As the example domain it would be **https://my-awesome-site.com**\n\nWe still have some issues with this cluster that we need to solve -\n\n1) Our ISP would change our IP address after a period of time normally 24h and then our DNS in cloudflare would directing traffic to our outdated ip address.\n2) Default backend page is not so exceiting, what if you want to deploy our own application.\n3) Even if we'll make sure to update this ip address in cloudflare our users will experince downtime once the ISP changes the ip address.\n\nWe can solve only the first two issues as for the time of writing this article (as for the lastone unfortunatly there is no such thing as zero downtime when it comes to home made solutions, once a day after 24h when the ip has changed there might be 1 to 3 sec of downtime).\n\n<br/>\n\n1) Luckly we can solve the first problem with the following technic, [cloudflare-dns-updater](https://github.com/edenreich/cloudflare-dns-updater) util will allow us to check for ip changes, once our ip address as been changed by the ISP, this util will send an API call to cloudflare to update the given DNS records with our current public IP.\nThe cool thing about it, is that we can deploy this to our cluster and forget it.\n\n<br/>\n\n2) For deploying an application we need to build a container for ARM architecture, push it to a container image registry of choice, create a deployment and service manifest.\nFor example first we create our namespace:\n\n```sh\nkubectl create ns backend\n```\n\nAnd **kube apply -f example-deployment-and-cluster-ip-service.yaml** the following deployment, assuming it's a container image that expose port 3000.\n\n```yaml\n// example-deployment-and-cluster-ip-service.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-app\n  namespace: backend\nspec:\n  replicas: 4\n  selector:\n    matchLabels:\n      app: my-app\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: my-service\n    spec:\n      containers:\n      - name: my-app\n        image: my-registry/my-service:latest\n        resources:\n          requests:\n            cpu: "200m"\n            memory: "499Mi"\n          limits:\n            cpu: "200m"\n            memory: "499Mi"\n        ports:\n        - containerPort: 3000\n      terminationGracePeriodSeconds: 60\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-app\n  namespace: backend\nspec:\n  type: ClusterIP\n  selector:\n    app: my-app\n  ports:\n  - port: 8080\n    targetPort: 3000\n```\n\nLastly we would need to configure our Ingress object(previously mentioned) to point our DNS to this **my-app** service. sense the ingress and the application are not on the same namespace we would need to reference the serviceName in the following format **\\[service-name\\].\\[namespace\\]** so for example:\n\n```yaml\n// ingress.yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: default\n  namespace: kube-system\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/proxy-body-size: "50m"\nspec:\n  tls:\n  - hosts:\n    - www.my-awesome-site.com\n    secretName: my-awesome-site.com-tls\n  rules:  \n    - host: my-awesome-site.com\n      http:\n        paths:\n        - path: /\n          backend:\n            serviceName: my-app.backend\n            servicePort: 8080\n    - host: www.my-awesome-site.com\n      http:\n        paths:\n        - path: /\n          backend:\n            serviceName: my-app.backend\n            servicePort: 8080\n```\n\nLet's apply this configuration changes:\n\n```sh\nkubectl apply -f ingress.yaml\n```\n\nNow traffic to these hostnames would be directed to my-app backend service, open your Domain in the browser and verify it: **[https://my-awesome-site.com](#)**\n\n<br/>\n\nI hope you enjoyed reading the article and that it level you up, and gave you a better understanding on how kubernetes manage to make our day to day development easier. If you liked this please give me feedback. On my next tutorial I would go into persistence storage and how to mount an SSD external storage as NFS  to your cluster, so stay tuned.	52356-08-13 08:00:00	t	52326-09-23 16:00:00	52423-04-15 02:24:09	\N	\N
2	\N	Build a production ready home Kuberenetes Raspberry 4 (8gb RAM) Cluster	build-a-production-ready-home-kuberenetes-raspberry-4-8gb-ram-cluster	\N	\N	## Build a production ready Kuberenetes Raspberry 4 (8gb RAM) Cluster\n\n![pi_cluster_advanced](https://admin.eden-reich.com/uploads/pi_cluster_advanced_3aa88e9daa.jpeg)\n\n## What are we building ?\n\nThis article is going to walk you through building an advanced  linux-based high-performance pi compute cluster for production use. If you already read my previous article about raspberry pi 4 (4GB RAM) it should be fairly similar with additional improvements.\nBut if you didn't, that's also fine, because I'll describe also specifically what components we'll need.\n\n## Prerequisite\n\nYou'll need to purchase the following equipment in order to follow along:\n\n- 1x [Socket Strips](https://www.amazon.de/gp/product/B01GUXUG3G/) approx. 30$\n- 1x [Cost Meter](https://www.amazon.de/gp/product/B07D7NKYQ3/) approx. 15$\n- 1x [Netgear 8 Port Network Switch](https://www.amazon.com/GS108NA-Netgear-ProSafe-Ethernet-1000Base-T/dp/B000092RRM/) approx. 35$\n- 1x [USB 3.0 Hub 10 Port](https://www.amazon.de/gp/product/B07HFTQTQX/) approx. 35$\n- 1x [Cluster CASE](https://www.amazon.co.uk/CLOUDLET-CASE-Raspberry-Single-Computers/dp/B07D5MJ7PQ/) approx. 70$\n- 1x [Samsung T7 Touch SSD-Drive](https://www.amazon.com/Samsung-Touch-Portable-SSD-MU-PC1T0K/dp/B082VW4QCX/) approx. 210$\n- 1x [Double sided transparent tape](https://www.amazon.com/Adhesive-Mounting-Removable-Traceless-Anti-Slip/dp/B07YHCP411/)\n- 1x [Cat 7 with length of 1m LAN cable](https://www.amazon.de/dp/B07S9T4X7Y/) approx. 11$\n- 7x [Cat 7 with length of 0.25m LAN cable](https://www.amazon.de/dp/B07S9T4X7Y/) approx. 6$ / piece\n- 7x [Raspberry pi's 4 (8GB RAM)](https://www.amazon.com/dp/B0899VXM8F/) approx. 85$/piece\n- 7x [Samsung EVO Plus 128GB microSD cards](https://www.amazon.com/Samsung-128GB-Class-Adapter-MB-MC128GA/dp/B06XFHQGB9/) approx 23$ / piece\n- 7x [USB type C to type A 3.1 Gen 1 cables](https://www.amazon.com/gp/product/B07D7S4SLL/) approx. 8$ / piece\n\n\nNotes: \n- budget of around 1300$ for this purchase is needed, don't forget that education / experience is priceless, but if that's still too much for you, you may also buy a minimal amount of pis to save some money, although I wouldn't save on quality parts, but rather on the quantity.\n- I  don't make commissions from this links, and do not have close connection with the following dealers (I've just ordered from them) and so I won't take responsibility for your purchases, so make them wisely.\n\n\n## Getting Started\n\n### Infrastructure\n\nOnce you have the parts available it should look similar like in the following pictures:\n\n![pi_cluster_advanced](https://admin.eden-reich.com/uploads/pi_cluster_advanced_19860d0c11.jpeg)\n\n![micro_sd_cards](https://admin.eden-reich.com/uploads/micro_sd_cards_6a66f140a0.jpeg)\n\nWe can start by the attaching the pi's to the holders that come with the cluster case, like so:\n\n![pi_holder](https://admin.eden-reich.com/uploads/pi_holder_f465a8782f.jpeg)\n\n![pi_holder_side](https://admin.eden-reich.com/uploads/pi_holder_side_8bed3793c8.jpeg)\n\nFor further information on how to install this you can follow this guy, he explains it very well on that video:\n\n[C4labs cloudlet case for raspberry pi](https://www.youtube.com/watch?v=ZUDcgoOgY_A)\n\nWe'll also need an NFS for our cluster, so let's use one of the holder for our SSD drive(to avoid the need to drill in the acrylic, we'll use the double sided transparent tape):\n\n![samsung_t7_ssd_drive](https://admin.eden-reich.com/uploads/samsung_t7_ssd_drive_b5ef69b76f.jpeg)\n\n![samsung_t7_ssd_drive_filpped](https://admin.eden-reich.com/uploads/samsung_t7_ssd_drive_filpped_f02f040d47.jpeg)\n\nAlthough this cluster case is perfectly designed for this use case, I still had to modify it a little bit with a drill because it didn't fit the usb cables, you can see on the left side of the holes that the holes were expanded a bit, so the power usb cables can go through:\n\n![expand_holes](https://admin.eden-reich.com/uploads/expand_holes_242600bbb3.jpeg)\n\nHere are some more pictures to show how to attach the usb hub and the network switch, both with the double sided transparent tape, note that I've let enough room for turning the switch off or on:\n\n![attach_network_switch](https://admin.eden-reich.com/uploads/attach_network_switch_3081a73f10.jpeg)\n\n![attach_usb_hub](https://admin.eden-reich.com/uploads/attach_usb_hub_156f7d7d71.jpeg)\n\nYou probably noticed there are few scratches on the case, that happend because I've glued the parts with that strong double sided tape wrongly first and had to remove them so stupidly enough I scratched it a bit :/\nSo as a tip from me, don't use too much of that strong double sided tape, because in case you want to restructure it (which probably not going happen occasionally, but still).\n\nAdding the **Samsung EVO Plus 128GB microSD cards** to each of the pi's after we burn the OS to it, attaching the compute fans to the pi's, attaching the network cables from the switch to the pi's and the power supply from our usb hub is basically all we need for the infrastructure part.\n\n### Power supply\n\nFor this part all we need to do is connect the electricity cost meter to a near by plug, connect the socket strips to our cost meter, and from our socket strips connect the usb hub power adapter.\n\n### Connectivity\n\nFor this part we just need to connect the last available port from our network switch (first or last one, doesn't really matter) to our home router available port, use the **1m cat 7 cable** for that, and once we are connected with the switch to our home router, automatically all of the pi's should be discoverable by the home router on our default gate way, normally at http://192.168.1.1 you get a web interface for configuring your router.\n\nAfter we've finished to setup our cluster internally with all security in place on our home network, we'll port forward external traffic to our cluster so for example **public-nat-ip:80,443 --> cluster:80,443**, but for security reasons let's first ensure the cluster is secure enough to be exposed to the public.\n\n### Software\n\nFor this part we are going to automate the installation process, we'll:\n1) burn an 32bit (64bit haven't been released yet / is unstable) Buster Lite OS image using etcher to our micro SD cards.\n2) enable ssh on the pi's.\n3) secure the ssh daemon configuration on each pi\n4) use a tool called ansible, to provision our pi's with the needed software (k3s, docker etc..).\n\n\nOk so let's unpack the **Samsung EVO Plus 128GB microSD cards** and burn **Buster Lite 32bit OS** to these cards:\n\n![sd_cards](https://admin.eden-reich.com/uploads/sd_cards_58a79309ce.jpeg)\n\nSimply take each one of the cards and burn the image [Debian Buster Lite](https://downloads.raspberrypi.org/raspios_lite_armhf_latest) to each one of these micro sd cards using [etcher](https://www.balena.io/etcher/), it's pretty straightforward to burn the image using this software, all you have to do is select the image you downloaded, select the target sd card you want to burn the image to and hit flash.\n\nAfter all sd cards are flashed, add to each one of them an **ssh** empty file (without any extension) to the root directory, that way we're telling the OS to start ssh daemon on boot, it's disabled by default.\n\nNow that we have all SD cards ready, let's connect them to the pi's that we have screwed to the acrylic holders previously.\n\n![attach_sd_cards](https://admin.eden-reich.com/uploads/attach_sd_cards_a7a92f7d18.jpeg)\n\nBefore we connect the pi's back in the case, make sure you first connected the switch to the power supply it's easier to connect it when the cluster case is empty. once it's plugged in, stack all the pi's in the cluster case.\nAs you connecting the pi's back in the case it would also be easier to make sure they are connected to the usb and the ventilator first.\nNotice in the picture how I've connected the ventilator - black goes to 6 and red goes to 4. \n\n![ventilator_connection](https://admin.eden-reich.com/uploads/ventilator_connection_5b260a2d83.jpeg)\n\nIf you are having issues with the switch, like pi's connected but then as you add another pi suddenly other pi's are disconnected, try connecting the usb hub additional usb cable to another power source, it seems like it doesn't get enough power just from one input, rather both were needed to be connected in order to supply enough power, that fixed it for me (that's the only usb hub I could find, if you have something better please do let me know).\n\n![usbhub_connections](https://admin.eden-reich.com/uploads/usbhub_connections_6d74666747.jpeg)\n\nOnce everything is connected we are ready to prepare are our machines for the automation script, it should looks similar like in the following picture.\n\n![connected](https://admin.eden-reich.com/uploads/connected_60ac57d172.jpeg)\n\nNotice I've plugged in 2 worker nodes to each usb section just in case I want to save some electicity costs I can simply keep this lower worker nodes off by switching the button to off.\n\nBecause I'm on windows, as for the working station I would like to have an Ubuntu VM, so I simply created a VM on my laptop and accessed into it for managing the cluster.\nNow To figure out which ip address on our network interface belongs to what pi, I turn each pi after the other by simply unplugging them all from the power supply or turning off the lower pi's off with the usbhub button.\nEnsure only the upper pi is on, install a tool called nmap with the following command:\n\n```sh\nsudo apt-get install nmap\n```\n\nOnce it's installed, scan the network for raspberrypi devices:\n\n```sh\nnmap -sn 192.168.1.1/24 | grep raspberrypi\n```\n\nIf you did unplug the rest of the pi's like mentioned previously, you should see only one record with an ip address.\nLet's copy our ssh public key to the that pi.\n\n```sh\nssh-copy-id pi@[whatever-ip-you-got-for-this-pi]\n```\n\nYou should see that you key has been added to the pi, let's access the pi.\n\n```sh\nssh pi@[whatever-ip-you-got-for-this-pi]\n```\n\nIt'll prompt you for host key verification confirm it with y and then it'll prompt you for password, type in raspberry (this is the default password, we're going to disable passwords once we're in).\n\nOk we're in, now let's update the pi simply run:\n\n```sh\nsudo apt-get update && sudo apt-get dist-upgrade\n```\n\nConfirm it with yes and let the update begin, once finished, let's install vim, it's a nice editor I always like to use.\n\n```sh\nsudo apt-get install vim\n```\n\nNext step we'll give this pi a static IP, let's edit /etc/dhcpcd.conf\n\n```sh\ninterface eth0\nstatic ip_address=192.168.1.11/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1 8.8.8.8\n```\nNow how do you know what to type for ip address ? you should first can your router for all connected devices on the working station:\n\n```sh\nnmap -sn 192.168.1.1/24\n```\n\nThis will scan all devices connected to your LAN, take the highest one and simply increment that value for the set of pi's so if you found out that the heighest ip that is currently connected is 192.168.1.5 we'll take for the first pi the address 192.168.1.6 and for the next worker node 192.168.1.7 and so on.\n\nNow that we know what IP address do we wish to give to that pi, let's reopen the `/etc/dhcpcd.conf` and edit the ip address.\n\n```sh\ninterface eth0\nstatic ip_address=192.168.1.6/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1 8.8.8.8\n```\n\nWe're almost done with the master node, we only need to secure our ssh daemon service.\n\n```sh\nsudo vi /etc/ssh/sshd_config\n```\n\nLook for #PasswordAuthentication yes uncomment this line and set it to no PasswordAuthentication no and save.\n\nLet's also give this pi a proper hostname run:\n\n```sh\nsudo raspi-config\n```\n\nGo  to **Network options** --> **Hostname**, choose a name type for example **k8s-master** and hit ok.\n\nLastly let's install docker:\n\n```\ncurl -sSL https://get.docker.com | -- sh\nsudo usermod -aG docker $USER\ndocker info\n```\n\nAlright that's it for the master-node you can now restart it for the configurations to take effect.\n\n```sh\nsudo reboot\n```\n\nThis will kick us off the pi back to the working station. Now that we know what's the ip address of the first pi let's add this hosts to the working station **/etc/hosts**.\n\n```sh\n192.168.1.6 k8s-master\n192.168.1.7 k8s-node1\n192.168.1.8 k8s-node2\n192.168.1.9 k8s-node3\n192.168.1.10 k8s-node4\n192.168.1.11 k8s-node5\n192.168.1.12 k8s-node6\n```\n\nSame process goes for the worker nodes, with 8 simple steps.\n\n1) update the pi\n2) copy you ssh key over\n3) give the pi a static ip\n4) disable password authentication on the ssh daemon in **/etc/ssh/sshd_config**\n5) give it a proper hostname\n6) modify the boot arguments in **/boot/cmdline.txt**\n7) install docker\n8) restart the pi\n\nFor installation process on the worker nodes you could also loop them for examplel installing docker on all of them would be:\n\n```\nfor nr in {1..6} \\\ndo \\\n  ssh -t pi@k8s-node${nr} "curl -sSL https://get.docker.com | sh && sudo usermod -aG docker \\$USER" \\\ndone\n```\n\nOnce this is done, we should have 7x configured pi's and ready to use. We can now install k3s on it using ansible.\nThere is a nice repository that was design just for this purpose, let's leverage it:\n\n```sh\ngit clone https://github.com/rancher/k3s-ansible && cd k3s-ansible\n```\n\nLet's copy the sample inventory to our own inventory.\n\n```sh\ncp -R inventory/sample inventory/my-cluster\n```\n\nNow let's modify ** inventory/my-cluster/hosts.ini** with our pi's hostnames.\n\n```ini\n[master]\nk8s-master\n\n[node]\nk8s-node1\n#k8s-node2\n#k8s-node3\n#k8s-node4\n#k8s-node5\n#k8s-node6\n\n[k3s_cluster:children]\nmaster\nnode\n```\n\nNote that I've commented out all of the pi's except the first one, I normally do this just to verify it works on one child pi, if it did, you can always rerun it on all the other pi's. It will then reinstall everything.\n\nLastly we need to modify the **/inventory/my-cluster/group_vars/all.yml**:\n\n```yml\n---\nk3s_version: v1.17.5+k3s1\nansible_user: pi\nsystemd_dir: /etc/systemd/system\nmaster_ip: "{{ hostvars[groups['master'][0]]['ansible_host'] | default(groups['master'][0]) }}"\nextra_server_args: "--docker --no-deploy traefik"\n```\n\nHere all we need to change is **ansible_user** from **debian** to **pi** and **extra_server_args** from empty string to **--docker --no-deploy traefik**.\nBasically first argument means we are going to use docker instead of default containerd runtime and the second argument means we're not going to deploy traefik, instead we are going to use nginx-ingress.\n\nOk we are set, let's start installing k3s, from the root directory of this repo run:\n\n```sh\nansible-playbook site.yml -i inventory/my-cluster/hosts.ini\n```\n\nIf that script fails, I've found that there was a bug in one of the roles, specificly the role in **roles/raspbian/task/main.yml**, that task is ensuring for each step that it's for raspbian OS and could not be read correctly by python, so sense I know I'm going to use it only on pi I've simple commented this checks out:\n\n```yml\n---\n- name: Test for Raspbian\n  set_fact:\n    raspbian: '{% if\n      ( ansible_facts.architecture is search("arm") and\n        ansible_facts.lsb.description is match("[Rr]aspbian.*[Bb]uster") ) or\n      ( ansible_facts.architecture is search("aarch64") and\n        ansible_facts.lsb.description is match("Debian.*buster") ) %}true{% else %}false{% endif %}'\n\n- name: Activating cgroup support\n  lineinfile:\n    path: /boot/cmdline.txt\n    regexp: '^((?!.*\\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\\b).*)$'\n    line: '\\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'\n    backrefs: true\n  #when:\n  #- raspbian is true\n\n- name: Flush iptables before changing to iptables-legacy\n  iptables:\n    flush: true\n  #when:\n  #- raspbian is true\n\n- name: Changing to iptables-legacy\n  alternatives:\n    path: /usr/sbin/iptables-legacy\n    name: iptables\n  register: ip4_legacy\n  #when:\n  #  - raspbian is true\n\n- name: Changing to ip6tables-legacy\n  alternatives:\n    path: /usr/sbin/ip6tables-legacy\n    name: ip6tables\n  register: ip6_legacy\n  #when:\n  # - raspbian is true\n\n- name: Rebooting\n  reboot:\n  #when:\n  # - raspbian is true\n```\n\nAfter commenting this out, give it another try:\n\n```sh\nansible-playbook site.yml -i inventory/my-cluster/hosts.ini\n```\n\nIf it now worked, remove the comments from the rest of the pi's hostname in **inventory/my-cluster/hosts.ini** and rerun it for all pi's.\n\nGreat! we now have a kubernetes cluster, but are not done yet, we still need to deploy **nginx-ingress**.\n\nFor this we'll use helm chart:\n\n\n\n	52400-08-25 16:00:00	f	52400-08-26 17:58:48	52422-10-01 15:36:25	\N	\N
3	4320896d-1715-4885-9810-856cd84d6420	Kubernetes for local development with KinD (Kubernetes in Docker)	kubernetes-for-local-development-with-kind	kubernetes, k8s, k3s, docker, development, containers	Kubernetes for local development with KinD (Kubernetes in Docker)	As we all know there are few tools out there to use kubernetes for local development, just to name a few - minikube, draft etc, however those tools are mostly consuming a lot of time to create, due to the fact they are creating nodes in a hardware based virtualisation rather than process based virtualisations. The main advantange of using a process based virtualisations is the speed of the creation for those instances.\n\n![kind](https://admin.eden-reich.com/uploads/kind_f6742b85fd.png)\n\nIn this short tutorial we're going to create 3 node cluster with a Metal LB deployed so we can test our services locally. duration of creating a cluster on the cloud is normally 5 to 10 min, whereas for us creating it locally should take at most 3 min, this is especially useful when you quickly want to test stuff.\n\nFor simplicity purposes this tutorial is going to assume you're running these commands on a linux OS.\n\n## Prerequisites\n\nTo start we need to have docker installed:\n```sh\ncurl -sSL https://get.docker.com | sh\n```\nWe'll also need to download KinD binary and put it in our system path:\n\n```sh\ncurl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.9.0/kind-linux-amd64\nchmod +x ./kind\nmv ./kind /usr/local/bin/kind\n```\n\nNow that we have both required components installed, we need to create simple directory for our project or change directory to our existing project:\n```sh\nmkdir kind-tutorial\ncd kind-tutorial\n```\n<br/>\n<br/>\n\n## Create the cluster\n\nIn our project we'll create the manifest **kubernetes-local-cluster.yaml** that tells **KinD** how many nodes and of what type we need:\n```sh\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n- role: worker\n- role: worker\n- role: worker\n```\n\nEverything is now ready for creation, so let's create the cluster by running:\n```sh\nkind create cluster --name local-cluster --config kubernetes-local-cluster.yaml\n```\n\nAfter approx. 3 min the cluster should be ready and you should be able to list the nodes (for this you'll of course need the kubernetes client **kubectl**, so ensure you've it downloaded and available in your path):\n\n```sh\nkubectl cluster-info\nkubectl get nodes\n```\n\nBy running the following command you should see a similar output as the following:\n```sh\nKubernetes master is running at https://127.0.0.1:42487\nKubeDNS is running at https://127.0.0.1:42487/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n```sh\nlocal-cluster-control-plane   Ready    master   106s   v1.19.1\nlocal-cluster-worker          Ready    <none>   72s    v1.19.1\nlocal-cluster-worker2         Ready    <none>   72s    v1.19.1\nlocal-cluster-worker3         Ready    <none>   72s    v1.19.1\n```\n<br/>\n<br/>\n\nNow that we've sucessfully created the kubernetes cluster locally, we need a way to be able to expose services. As you may know on a cloud environment of kubernetes if you want to have a service exposed you'll set **type: LoadBalancer** on the service manifest and the kubernetes API will pickup the request using a k8s operator to provision a loadbalancer by the cloud provider and assoisate it with your cluster. However on a local enviornment we don't have such API available and the k8s operator  detect that you're using kubernetes on a bare metal and would simply leave the external ip address on pending status. We need a way to expose services to our local machine, to solve this issue we'll deploy MetalLB in our cluster, on the high level MetalLB  providing us a way to load balance between the nodes (using speakers and ) targeting on-premises / bare metal servers, I won't get too deep into details because there is much more to it how this load balancer work and those are just implemention details, if you're curious you can always refer to the [documentation of Metal LB](https://metallb.universe.tf/).\n<br/>\n<br/>\n\n## Deploy MetalLB\n\nTo deploy MetalLB we can follow the docs on [MetalLB website](https://metallb.universe.tf/installation/):\n```sh\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml\n# On first install only\nkubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"\n```\n\nOutput should be as follow:\n```sh\nnamespace/metallb-system created\n```\n```sh\npodsecuritypolicy.policy/controller created\npodsecuritypolicy.policy/speaker created\nserviceaccount/controller created\nserviceaccount/speaker created\nclusterrole.rbac.authorization.k8s.io/metallb-system:controller created\nclusterrole.rbac.authorization.k8s.io/metallb-system:speaker created\nrole.rbac.authorization.k8s.io/config-watcher created\nrole.rbac.authorization.k8s.io/pod-lister created\nclusterrolebinding.rbac.authorization.k8s.io/metallb-system:controller created\nclusterrolebinding.rbac.authorization.k8s.io/metallb-system:speaker created\nrolebinding.rbac.authorization.k8s.io/config-watcher created\nrolebinding.rbac.authorization.k8s.io/pod-lister created\ndaemonset.apps/speaker created\ndeployment.apps/controller created\n```\n```sh\nsecret/memberlist created\n```\n\nTo verify that our MetalLB deployment went successfully, we can issue the following command and ensure you get a similar output:\n```sh\n kubectl -n metallb-system get all\n```\nOutput should be like the following:\n```sh\nNAME                              READY   STATUS    RESTARTS   AGE\npod/controller-65db86ddc6-qp5s5   1/1     Running   0          10m\npod/speaker-66dhl                 1/1     Running   0          10m\npod/speaker-c5pdx                 1/1     Running   0          10m\npod/speaker-cxzp7                 1/1     Running   0          10m\npod/speaker-q2ddw                 1/1     Running   0          10m\n\nNAME                     DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE\ndaemonset.apps/speaker   4         4         4       4            4           kubernetes.io/os=linux   10m\n\nNAME                         READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/controller   1/1     1            1           10m\n\nNAME                                    DESIRED   CURRENT   READY   AGE\nreplicaset.apps/controller-65db86ddc6   1         1         1       10m\n```\n\nNow that we've MetalLB successfully deployed in our local cluster and all Metallb speakers are on a running state, we need to configure MetalLB and tell it about our IP range that we want to reserve for the purpose of exposing deployments with Load Balancers, so we'll create a **metallb-config.yaml** with the following content:\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - 172.19.xxx.xxx-172.19.xxx.xxx\n```\n\nTo figure out what range you should specify in the metallb configurations you can run the following command to first get the running nodes ip addresses:\n```sh\ndocker inspect network kind | grep IPv4Address\n```\nOutput should be similar to mine if you're running docker on linux:\n```sh\n"IPv4Address": "172.19.0.2/16",\n"IPv4Address": "172.19.0.5/16",\n"IPv4Address": "172.19.0.4/16",\n"IPv4Address": "172.19.0.3/16",\n```\nThis tells us that we can use the ip range of **172.19.255.1 - 172.19.255.250**, so we'll modify the metallb configurations created earlier to use that range, save it and deploy it to the cluster:\n```sh\nkubectl create -f metallb-config.yaml\n```\n<br/>\n<br/>\n\nIf you followed this tutorial and reach this point by now, you should be able to create a deployment and expose it with an LB layer 2 in your local cluster, let's verify that it works:\n```sh\nkubectl create deploy nginx --image nginx\n```\nNow let's expose the deployment and watch for changes:\n```sh\nkubectl expose deploy nginx --port 80 --type LoadBalancer\nwatch kubectl get svc\n```\nOutput should be like the following:\n```sh\nNAME         TYPE           CLUSTER-IP      EXTERNAL-IP    PORT(S)        AGE\nkubernetes   ClusterIP      10.96.0.1       <none>         443/TCP        77m\nnginx        LoadBalancer   10.96.214.126   172.19.255.1   80:31048/TCP   5s\n```\n\nAlright, let's curl it:\n\n```sh\ncurl http://172.19.255.1\n```\n\nAnd you should see now the default welcome page of your nginx deployment :)\nNow of course you could create multiple deployments now locally that are exposed by multiple services within the specified ip range.\n<br/>\n<br/>\n\nThat's it for this tutorial, to recap the skills we've gained after reading this:\n* [x]  The ability to create a local cluster very quickly, without extra hardware needed\n* [x]  Test http services with MetalLB on a local cluster\n\n<br/>\n<br/>\nHope you'll find this article very useful for your local development.\n\n\n\n	52845-05-22 04:00:00	t	52845-02-05 08:10:32	52847-04-15 10:53:11	\N	\N
\.


--
-- Data for Name: core_store; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.core_store (id, key, value, type, environment, tag) FROM stdin;
1	db_model_core_store	{"key":{"type":"string"},"value":{"type":"text"},"type":{"type":"string"},"environment":{"type":"string"},"tag":{"type":"string"}}	object	\N	\N
2	db_model_strapi_webhooks	{"name":{"type":"string"},"url":{"type":"text"},"headers":{"type":"json"},"events":{"type":"json"},"enabled":{"type":"boolean"}}	object	\N	\N
3	db_model_strapi_administrator	{"username":{"type":"string","minLength":3,"unique":true,"configurable":false,"required":true},"email":{"type":"email","minLength":6,"configurable":false,"required":true},"password":{"type":"password","minLength":6,"configurable":false,"private":true,"required":true},"resetPasswordToken":{"type":"string","configurable":false,"private":true},"blocked":{"type":"boolean","default":false,"configurable":false}}	object	\N	\N
4	db_model_users-permissions_permission	{"type":{"type":"string","required":true,"configurable":false},"controller":{"type":"string","required":true,"configurable":false},"action":{"type":"string","required":true,"configurable":false},"enabled":{"type":"boolean","required":true,"configurable":false},"policy":{"type":"string","configurable":false},"role":{"model":"role","via":"permissions","plugin":"users-permissions","configurable":false}}	object	\N	\N
5	db_model_users-permissions_role	{"name":{"type":"string","minLength":3,"required":true,"configurable":false},"description":{"type":"string","configurable":false},"type":{"type":"string","unique":true,"configurable":false},"permissions":{"collection":"permission","via":"role","plugin":"users-permissions","configurable":false,"isVirtual":true},"users":{"collection":"user","via":"role","configurable":false,"plugin":"users-permissions","isVirtual":true}}	object	\N	\N
6	db_model_users-permissions_user	{"username":{"type":"string","minLength":3,"unique":true,"configurable":false,"required":true},"email":{"type":"email","minLength":6,"configurable":false,"required":true},"provider":{"type":"string","configurable":false},"password":{"type":"password","minLength":6,"configurable":false,"private":true},"resetPasswordToken":{"type":"string","configurable":false,"private":true},"confirmed":{"type":"boolean","default":false,"configurable":false},"blocked":{"type":"boolean","default":false,"configurable":false},"role":{"model":"role","via":"users","plugin":"users-permissions","configurable":false},"created_at":{"type":"currentTimestamp"},"updated_at":{"type":"currentTimestamp"}}	object	\N	\N
7	db_model_upload_file	{"name":{"type":"string","configurable":false,"required":true},"alternativeText":{"type":"string","configurable":false},"caption":{"type":"string","configurable":false},"width":{"type":"integer","configurable":false},"height":{"type":"integer","configurable":false},"formats":{"type":"json","configurable":false},"hash":{"type":"string","configurable":false,"required":true},"ext":{"type":"string","configurable":false},"mime":{"type":"string","configurable":false,"required":true},"size":{"type":"decimal","configurable":false,"required":true},"url":{"type":"string","configurable":false,"required":true},"previewUrl":{"type":"string","configurable":false},"provider":{"type":"string","configurable":false,"required":true},"provider_metadata":{"type":"json","configurable":false},"related":{"collection":"*","filter":"field","configurable":false},"created_at":{"type":"currentTimestamp"},"updated_at":{"type":"currentTimestamp"}}	object	\N	\N
8	db_model_upload_file_morph	{"upload_file_id":{"type":"integer"},"related_id":{"type":"integer"},"related_type":{"type":"text"},"field":{"type":"text"},"order":{"type":"integer"}}	object	\N	\N
10	plugin_email_provider	{"provider":"mailgun","name":"Sendmail","auth":{"sendmail_default_from":{"label":"Sendmail Default From","type":"text"},"sendmail_default_replyto":{"label":"Sendmail Default Reply-To","type":"text"}},"mailgun_default_from":"eden.reich@gmail.com","mailgun_default_replyto":"eden.reich@gmail.com","mailgun_api_key":"pubkey-xxx","mailgun_domain":"mg.eden-reich.com","mailgun_api_host":"mg.eden-reich.com"}	object	production	
11	plugin_upload_settings	{"sizeOptimization":true,"responsiveDimensions":true}	object	production	
12	plugin_content_manager_configuration_content_types::plugins::users-permissions.permission	{"uid":"plugins::users-permissions.permission","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"type","defaultSortBy":"type","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"type":{"edit":{"label":"Type","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Type","searchable":true,"sortable":true}},"controller":{"edit":{"label":"Controller","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Controller","searchable":true,"sortable":true}},"action":{"edit":{"label":"Action","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Action","searchable":true,"sortable":true}},"enabled":{"edit":{"label":"Enabled","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Enabled","searchable":true,"sortable":true}},"policy":{"edit":{"label":"Policy","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Policy","searchable":true,"sortable":true}},"role":{"edit":{"label":"Role","description":"","placeholder":"","visible":true,"editable":true,"mainField":"name"},"list":{"label":"Role","searchable":false,"sortable":false}}},"layouts":{"list":["id","type","controller","action"],"editRelations":["role"],"edit":[[{"name":"type","size":6},{"name":"controller","size":6}],[{"name":"action","size":6},{"name":"enabled","size":4}],[{"name":"policy","size":6}]]}}	object		
24	db_model_likes	{"uuid":{"type":"string","private":true,"required":true},"reaction_type":{"type":"enumeration","enum":["like","love","dislike"]},"article":{"model":"articles","via":"likes"},"session":{"unique":true,"model":"sessions","via":"likes"},"created_at":{"type":"currentTimestamp"},"updated_at":{"type":"currentTimestamp"}}	object	\N	\N
13	plugin_content_manager_configuration_content_types::plugins::users-permissions.role	{"uid":"plugins::users-permissions.role","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"name","defaultSortBy":"name","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"name":{"edit":{"label":"Name","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Name","searchable":true,"sortable":true}},"description":{"edit":{"label":"Description","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Description","searchable":true,"sortable":true}},"type":{"edit":{"label":"Type","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Type","searchable":true,"sortable":true}},"permissions":{"edit":{"label":"Permissions","description":"","placeholder":"","visible":true,"editable":true,"mainField":"type"},"list":{"label":"Permissions","searchable":false,"sortable":false}},"users":{"edit":{"label":"Users","description":"","placeholder":"","visible":true,"editable":true,"mainField":"username"},"list":{"label":"Users","searchable":false,"sortable":false}}},"layouts":{"list":["id","name","description","type"],"editRelations":["permissions","users"],"edit":[[{"name":"name","size":6},{"name":"description","size":6}],[{"name":"type","size":6}]]}}	object		
14	plugin_content_manager_configuration_content_types::plugins::upload.file	{"uid":"plugins::upload.file","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"name","defaultSortBy":"name","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"name":{"edit":{"label":"Name","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Name","searchable":true,"sortable":true}},"alternativeText":{"edit":{"label":"AlternativeText","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"AlternativeText","searchable":true,"sortable":true}},"caption":{"edit":{"label":"Caption","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Caption","searchable":true,"sortable":true}},"width":{"edit":{"label":"Width","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Width","searchable":true,"sortable":true}},"height":{"edit":{"label":"Height","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Height","searchable":true,"sortable":true}},"formats":{"edit":{"label":"Formats","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Formats","searchable":false,"sortable":false}},"hash":{"edit":{"label":"Hash","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Hash","searchable":true,"sortable":true}},"ext":{"edit":{"label":"Ext","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Ext","searchable":true,"sortable":true}},"mime":{"edit":{"label":"Mime","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Mime","searchable":true,"sortable":true}},"size":{"edit":{"label":"Size","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Size","searchable":true,"sortable":true}},"url":{"edit":{"label":"Url","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Url","searchable":true,"sortable":true}},"previewUrl":{"edit":{"label":"PreviewUrl","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"PreviewUrl","searchable":true,"sortable":true}},"provider":{"edit":{"label":"Provider","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Provider","searchable":true,"sortable":true}},"provider_metadata":{"edit":{"label":"Provider_metadata","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Provider_metadata","searchable":false,"sortable":false}},"related":{"edit":{"label":"Related","description":"","placeholder":"","visible":true,"editable":true,"mainField":"id"},"list":{"label":"Related","searchable":false,"sortable":false}},"created_at":{"edit":{"label":"Created_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Created_at","searchable":true,"sortable":true}},"updated_at":{"edit":{"label":"Updated_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Updated_at","searchable":true,"sortable":true}}},"layouts":{"list":["id","name","alternativeText","caption"],"editRelations":["related"],"edit":[[{"name":"name","size":6},{"name":"alternativeText","size":6}],[{"name":"caption","size":6},{"name":"width","size":4}],[{"name":"height","size":4}],[{"name":"formats","size":12}],[{"name":"hash","size":6},{"name":"ext","size":6}],[{"name":"mime","size":6},{"name":"size","size":4}],[{"name":"url","size":6},{"name":"previewUrl","size":6}],[{"name":"provider","size":6}],[{"name":"provider_metadata","size":12}]]}}	object		
17	plugin_users-permissions_email	{"reset_password":{"display":"Email.template.reset_password","icon":"sync","options":{"from":{"name":"Administration Panel","email":"no-reply@strapi.io"},"response_email":"","object":"Reset password","message":"<p>We heard that you lost your password. Sorry about that!</p>\\n\\n<p>But don’t worry! You can use the following link to reset your password:</p>\\n\\n<p><%= URL %>?code=<%= TOKEN %></p>\\n\\n<p>Thanks.</p>"}},"email_confirmation":{"display":"Email.template.email_confirmation","icon":"check-square","options":{"from":{"name":"Administration Panel","email":"no-reply@strapi.io"},"response_email":"","object":"Account confirmation","message":"<p>Thank you for registering!</p>\\n\\n<p>You have to confirm your email address. Please click on the link below.</p>\\n\\n<p><%= URL %>?confirmation=<%= CODE %></p>\\n\\n<p>Thanks.</p>"}}}	object		
18	plugin_users-permissions_advanced	{"unique_email":true,"allow_register":true,"email_confirmation":false,"email_confirmation_redirection":"https://admin.eden-reich.com/admin","email_reset_password":"https://admin.eden-reich.com/admin","default_role":"authenticated"}	object		
19	plugin_email_provider	{"provider":"sendmail","name":"Sendmail","auth":{"sendmail_default_from":{"label":"Sendmail Default From","type":"text"},"sendmail_default_replyto":{"label":"Sendmail Default Reply-To","type":"text"}}}	object	development	
20	plugin_email_provider	{"provider":"sendmail","name":"Sendmail","auth":{"sendmail_default_from":{"label":"Sendmail Default From","type":"text"},"sendmail_default_replyto":{"label":"Sendmail Default Reply-To","type":"text"}}}	object	staging	
21	db_model_articles	{"uuid":{"type":"uid","private":false},"title":{"type":"string","required":true},"slug":{"type":"string","required":true},"meta_keywords":{"type":"string","required":false},"meta_description":{"type":"string","required":false},"meta_thumbnail":{"model":"file","via":"related","allowedTypes":["images"],"plugin":"upload","required":false},"content":{"type":"richtext","required":true},"published_at":{"type":"datetime"},"published":{"type":"boolean","default":false,"required":false},"likes":{"via":"article","collection":"likes","isVirtual":true},"created_at":{"type":"currentTimestamp"},"updated_at":{"type":"currentTimestamp"}}	object	\N	\N
22	plugin_upload_settings	{"sizeOptimization":true,"responsiveDimensions":true}	object	development	
23	plugin_content_manager_configuration_content_types::application::articles.articles	{"uid":"application::articles.articles","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"slug","defaultSortBy":"title","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"uuid":{"edit":{"label":"Uuid","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Uuid","searchable":true,"sortable":true}},"title":{"edit":{"label":"Title","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Title","searchable":true,"sortable":true}},"slug":{"edit":{"label":"Slug","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Slug","searchable":true,"sortable":true}},"meta_keywords":{"edit":{"label":"Meta_keywords","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Meta_keywords","searchable":true,"sortable":true}},"meta_description":{"edit":{"label":"Meta_description","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Meta_description","searchable":true,"sortable":true}},"meta_thumbnail":{"edit":{"label":"Meta_thumbnail","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Meta_thumbnail","searchable":false,"sortable":false}},"content":{"edit":{"label":"Content","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Content","searchable":false,"sortable":false}},"published":{"edit":{"label":"Published","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Published","searchable":true,"sortable":true}},"likes":{"edit":{"label":"Likes","description":"","placeholder":"","visible":true,"editable":true,"mainField":"uuid"},"list":{"label":"Likes","searchable":false,"sortable":false}},"created_at":{"edit":{"label":"Created_at","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Created_at","searchable":true,"sortable":true}},"updated_at":{"edit":{"label":"Updated_at","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Updated_at","searchable":true,"sortable":true}}},"layouts":{"list":["id","title","slug","published","updated_at"],"edit":[[{"name":"title","size":6},{"name":"slug","size":6}],[{"name":"meta_keywords","size":6},{"name":"meta_description","size":6}],[{"name":"meta_thumbnail","size":6}],[{"name":"content","size":12}],[{"name":"published","size":4}]],"editRelations":["likes"]}}	object		
16	plugin_content_manager_configuration_content_types::plugins::users-permissions.user	{"uid":"plugins::users-permissions.user","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"username","defaultSortBy":"username","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"username":{"edit":{"label":"Username","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Username","searchable":true,"sortable":true}},"email":{"edit":{"label":"Email","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Email","searchable":true,"sortable":true}},"provider":{"edit":{"label":"Provider","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Provider","searchable":true,"sortable":true}},"password":{"edit":{"label":"Password","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Password","searchable":true,"sortable":true}},"resetPasswordToken":{"edit":{"label":"ResetPasswordToken","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"ResetPasswordToken","searchable":true,"sortable":true}},"confirmationToken":{"edit":{"label":"ConfirmationToken","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"ConfirmationToken","searchable":true,"sortable":true}},"confirmed":{"edit":{"label":"Confirmed","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Confirmed","searchable":true,"sortable":true}},"blocked":{"edit":{"label":"Blocked","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Blocked","searchable":true,"sortable":true}},"role":{"edit":{"label":"Role","description":"","placeholder":"","visible":true,"editable":true,"mainField":"name"},"list":{"label":"Role","searchable":false,"sortable":false}},"created_at":{"edit":{"label":"Created_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Created_at","searchable":true,"sortable":true}},"updated_at":{"edit":{"label":"Updated_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Updated_at","searchable":true,"sortable":true}}},"layouts":{"list":["id","username","email","confirmed"],"edit":[[{"name":"username","size":6},{"name":"email","size":6}],[{"name":"password","size":6},{"name":"confirmed","size":4}],[{"name":"blocked","size":4}]],"editRelations":["role"]}}	object		
26	plugin_content_manager_configuration_content_types::application::likes.likes	{"uid":"application::likes.likes","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"uuid","defaultSortBy":"uuid","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"uuid":{"edit":{"label":"Uuid","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Uuid","searchable":true,"sortable":true}},"reaction_type":{"edit":{"label":"Reaction_type","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Reaction_type","searchable":true,"sortable":true}},"article":{"edit":{"label":"Article","description":"","placeholder":"","visible":true,"editable":true,"mainField":"title"},"list":{"label":"Article","searchable":false,"sortable":false}},"session":{"edit":{"label":"Session","description":"","placeholder":"","visible":true,"editable":true,"mainField":"ip_address"},"list":{"label":"Session","searchable":false,"sortable":false}},"created_at":{"edit":{"label":"Created_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Created_at","searchable":true,"sortable":true}},"updated_at":{"edit":{"label":"Updated_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Updated_at","searchable":true,"sortable":true}}},"layouts":{"list":["id","uuid","reaction_type"],"edit":[[{"name":"uuid","size":6},{"name":"reaction_type","size":6}]],"editRelations":["article","session"]}}	object		
27	plugin_email_provider	{"provider":"sendmail","name":"Sendmail","auth":{"sendmail_default_from":{"label":"Sendmail Default From","type":"text"},"sendmail_default_replyto":{"label":"Sendmail Default Reply-To","type":"text"}}}	object	stage	
28	plugin_upload_settings	{"sizeOptimization":true,"responsiveDimensions":true}	object	stage	
29	db_model_sessions	{"uuid":{"type":"uid","required":true},"ip_address":{"type":"string","required":true,"unique":true},"likes":{"via":"session","collection":"likes","isVirtual":true},"created_at":{"type":"currentTimestamp"},"updated_at":{"type":"currentTimestamp"}}	object	\N	\N
30	plugin_content_manager_configuration_content_types::application::sessions.sessions	{"uid":"application::sessions.sessions","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"ip_address","defaultSortBy":"ip_address","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"uuid":{"edit":{"label":"Uuid","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Uuid","searchable":true,"sortable":true}},"ip_address":{"edit":{"label":"Ip_address","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Ip_address","searchable":true,"sortable":true}},"likes":{"edit":{"label":"Likes","description":"","placeholder":"","visible":true,"editable":true,"mainField":"uuid"},"list":{"label":"Likes","searchable":false,"sortable":false}},"created_at":{"edit":{"label":"Created_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Created_at","searchable":true,"sortable":true}},"updated_at":{"edit":{"label":"Updated_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Updated_at","searchable":true,"sortable":true}}},"layouts":{"list":["id","uuid","ip_address","created_at"],"editRelations":["likes"],"edit":[[{"name":"uuid","size":6},{"name":"ip_address","size":6}]]}}	object		
31	model_def_strapi::core-store	{"uid":"strapi::core-store","collectionName":"core_store","info":{"name":"core_store","description":""},"options":{"timestamps":false},"attributes":{"key":{"type":"string"},"value":{"type":"text"},"type":{"type":"string"},"environment":{"type":"string"},"tag":{"type":"string"}}}	object	\N	\N
33	model_def_application::likes.likes	{"uid":"application::likes.likes","collectionName":"likes","kind":"collectionType","info":{"name":"Likes"},"options":{"increments":true,"timestamps":["created_at","updated_at"]},"attributes":{"uuid":{"type":"string","private":true,"required":true},"reaction_type":{"type":"enumeration","enum":["like","love","dislike"]},"article":{"model":"articles","via":"likes"},"session":{"unique":true,"model":"sessions","via":"likes"},"created_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true},"updated_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true}}}	object	\N	\N
34	model_def_application::sessions.sessions	{"uid":"application::sessions.sessions","collectionName":"sessions","kind":"collectionType","info":{"name":"sessions"},"options":{"increments":true,"timestamps":["created_at","updated_at"]},"attributes":{"uuid":{"type":"uid","required":true},"ip_address":{"type":"string","required":true,"unique":true},"likes":{"via":"session","collection":"likes","isVirtual":true},"created_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true},"updated_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true}}}	object	\N	\N
35	model_def_strapi::webhooks	{"uid":"strapi::webhooks","collectionName":"strapi_webhooks","info":{"name":"Strapi webhooks","description":""},"options":{"timestamps":false},"attributes":{"name":{"type":"string"},"url":{"type":"text"},"headers":{"type":"json"},"events":{"type":"json"},"enabled":{"type":"boolean"}}}	object	\N	\N
36	model_def_strapi::permission	{"uid":"strapi::permission","collectionName":"strapi_permission","kind":"collectionType","info":{"name":"Permission","description":""},"options":{"timestamps":["created_at","updated_at"]},"attributes":{"action":{"type":"string","minLength":1,"configurable":false,"required":true},"subject":{"type":"string","minLength":1,"configurable":false,"required":false},"fields":{"type":"json","configurable":false,"required":false,"default":[]},"conditions":{"type":"json","configurable":false,"required":false,"default":[]},"role":{"configurable":false,"model":"role","plugin":"admin"}}}	object	\N	\N
44	plugin_content_manager_configuration_content_types::strapi::role	{"uid":"strapi::role","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"name","defaultSortBy":"name","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"name":{"edit":{"label":"Name","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Name","searchable":true,"sortable":true}},"code":{"edit":{"label":"Code","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Code","searchable":true,"sortable":true}},"description":{"edit":{"label":"Description","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Description","searchable":true,"sortable":true}},"users":{"edit":{"label":"Users","description":"","placeholder":"","visible":true,"editable":true,"mainField":"firstname"},"list":{"label":"Users","searchable":false,"sortable":false}},"permissions":{"edit":{"label":"Permissions","description":"","placeholder":"","visible":true,"editable":true,"mainField":"action"},"list":{"label":"Permissions","searchable":false,"sortable":false}},"created_at":{"edit":{"label":"Created_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Created_at","searchable":true,"sortable":true}},"updated_at":{"edit":{"label":"Updated_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Updated_at","searchable":true,"sortable":true}}},"layouts":{"list":["id","name","code","description"],"editRelations":["users","permissions"],"edit":[[{"name":"name","size":6},{"name":"code","size":6}],[{"name":"description","size":6}]]}}	object		
37	model_def_strapi::role	{"uid":"strapi::role","collectionName":"strapi_role","kind":"collectionType","info":{"name":"Role","description":""},"options":{"timestamps":["created_at","updated_at"]},"attributes":{"name":{"type":"string","minLength":1,"unique":true,"configurable":false,"required":true},"code":{"type":"string","minLength":1,"unique":true,"configurable":false,"required":true},"description":{"type":"string","configurable":false},"users":{"configurable":false,"collection":"user","via":"roles","plugin":"admin","attribute":"user","column":"id","isVirtual":true},"permissions":{"configurable":false,"plugin":"admin","collection":"permission","via":"role","isVirtual":true}}}	object	\N	\N
38	model_def_strapi::user	{"uid":"strapi::user","collectionName":"strapi_administrator","kind":"collectionType","info":{"name":"User","description":""},"options":{"timestamps":false},"attributes":{"firstname":{"type":"string","unique":false,"minLength":1,"configurable":false,"required":false},"lastname":{"type":"string","unique":false,"minLength":1,"configurable":false,"required":false},"username":{"type":"string","unique":false,"configurable":false,"required":false},"email":{"type":"email","minLength":6,"configurable":false,"required":true,"unique":true,"private":true},"password":{"type":"password","minLength":6,"configurable":false,"required":false,"private":true},"resetPasswordToken":{"type":"string","configurable":false,"private":true},"registrationToken":{"type":"string","configurable":false,"private":true},"isActive":{"type":"boolean","default":false,"configurable":false,"private":true},"roles":{"collection":"role","collectionName":"strapi_users_roles","via":"users","dominant":true,"plugin":"admin","configurable":false,"private":true,"attribute":"role","column":"id","isVirtual":true},"blocked":{"type":"boolean","default":false,"configurable":false,"private":true}}}	object	\N	\N
9	plugin_users-permissions_grant	{"email":{"enabled":true,"icon":"envelope"},"discord":{"enabled":false,"icon":"discord","key":"","secret":"","callback":"/auth/discord/callback","scope":["identify","email"]},"facebook":{"enabled":false,"icon":"facebook-square","key":"","secret":"","callback":"/auth/facebook/callback","scope":["email"]},"google":{"enabled":false,"icon":"google","key":"","secret":"","callback":"/auth/google/callback","scope":["email"]},"github":{"enabled":false,"icon":"github","key":"","secret":"","callback":"/auth/github/callback","scope":["user","user:email"],"redirect_uri":"/auth/github/callback"},"microsoft":{"enabled":false,"icon":"windows","key":"","secret":"","callback":"/auth/microsoft/callback","scope":["user.read"]},"twitter":{"enabled":false,"icon":"twitter","key":"","secret":"","callback":"/auth/twitter/callback"},"instagram":{"enabled":false,"icon":"instagram","key":"","secret":"","callback":"/auth/instagram/callback"},"vk":{"enabled":false,"icon":"vk","key":"","secret":"","callback":"/auth/vk/callback","scope":["email"]},"twitch":{"enabled":false,"icon":"twitch","key":"","secret":"","callback":"/auth/twitch/callback","scope":["user:read:email"]},"linkedin":{"enabled":false,"icon":"linkedin","key":"","secret":"","callback":"/auth/linkedin/callback","scope":["r_liteprofile","r_emailaddress"]},"cognito":{"enabled":false,"icon":"aws","key":"","secret":"","subdomain":"my.subdomain.com","callback":"/auth/cognito/callback","scope":["email","openid","profile"]}}	object		
43	plugin_content_manager_configuration_content_types::strapi::permission	{"uid":"strapi::permission","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"action","defaultSortBy":"action","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"action":{"edit":{"label":"Action","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Action","searchable":true,"sortable":true}},"subject":{"edit":{"label":"Subject","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Subject","searchable":true,"sortable":true}},"fields":{"edit":{"label":"Fields","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Fields","searchable":false,"sortable":false}},"conditions":{"edit":{"label":"Conditions","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Conditions","searchable":false,"sortable":false}},"role":{"edit":{"label":"Role","description":"","placeholder":"","visible":true,"editable":true,"mainField":"name"},"list":{"label":"Role","searchable":false,"sortable":false}},"created_at":{"edit":{"label":"Created_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Created_at","searchable":true,"sortable":true}},"updated_at":{"edit":{"label":"Updated_at","description":"","placeholder":"","visible":false,"editable":true},"list":{"label":"Updated_at","searchable":true,"sortable":true}}},"layouts":{"list":["id","action","subject","created_at"],"editRelations":["role"],"edit":[[{"name":"action","size":6},{"name":"subject","size":6}],[{"name":"fields","size":12}],[{"name":"conditions","size":12}]]}}	object		
40	model_def_plugins::users-permissions.role	{"uid":"plugins::users-permissions.role","collectionName":"users-permissions_role","kind":"collectionType","info":{"name":"role","description":""},"options":{"timestamps":false},"attributes":{"name":{"type":"string","minLength":3,"required":true,"configurable":false},"description":{"type":"string","configurable":false},"type":{"type":"string","unique":true,"configurable":false},"permissions":{"collection":"permission","via":"role","plugin":"users-permissions","configurable":false,"isVirtual":true},"users":{"collection":"user","via":"role","configurable":false,"plugin":"users-permissions","isVirtual":true},"created_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true},"updated_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true}}}	object	\N	\N
41	model_def_plugins::users-permissions.user	{"uid":"plugins::users-permissions.user","collectionName":"users-permissions_user","kind":"collectionType","info":{"name":"user","description":""},"options":{"draftAndPublish":false,"timestamps":["created_at","updated_at"]},"attributes":{"username":{"type":"string","minLength":3,"unique":true,"configurable":false,"required":true},"email":{"type":"email","minLength":6,"configurable":false,"required":true},"provider":{"type":"string","configurable":false},"password":{"type":"password","minLength":6,"configurable":false,"private":true},"resetPasswordToken":{"type":"string","configurable":false,"private":true},"confirmationToken":{"type":"string","configurable":false,"private":true},"confirmed":{"type":"boolean","default":false,"configurable":false},"blocked":{"type":"boolean","default":false,"configurable":false},"role":{"model":"role","via":"users","plugin":"users-permissions","configurable":false},"created_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true},"updated_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true}}}	object	\N	\N
42	model_def_plugins::upload.file	{"uid":"plugins::upload.file","collectionName":"upload_file","kind":"collectionType","info":{"name":"file","description":""},"options":{"timestamps":["created_at","updated_at"]},"attributes":{"name":{"type":"string","configurable":false,"required":true},"alternativeText":{"type":"string","configurable":false},"caption":{"type":"string","configurable":false},"width":{"type":"integer","configurable":false},"height":{"type":"integer","configurable":false},"formats":{"type":"json","configurable":false},"hash":{"type":"string","configurable":false,"required":true},"ext":{"type":"string","configurable":false},"mime":{"type":"string","configurable":false,"required":true},"size":{"type":"decimal","configurable":false,"required":true},"url":{"type":"string","configurable":false,"required":true},"previewUrl":{"type":"string","configurable":false},"provider":{"type":"string","configurable":false,"required":true},"provider_metadata":{"type":"json","configurable":false},"related":{"collection":"*","filter":"field","configurable":false},"created_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true},"updated_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true}}}	object	\N	\N
45	plugin_content_manager_configuration_content_types::strapi::user	{"uid":"strapi::user","settings":{"bulkable":true,"filterable":true,"searchable":true,"pageSize":10,"mainField":"firstname","defaultSortBy":"firstname","defaultSortOrder":"ASC"},"metadatas":{"id":{"edit":{},"list":{"label":"Id","searchable":true,"sortable":true}},"firstname":{"edit":{"label":"Firstname","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Firstname","searchable":true,"sortable":true}},"lastname":{"edit":{"label":"Lastname","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Lastname","searchable":true,"sortable":true}},"username":{"edit":{"label":"Username","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Username","searchable":true,"sortable":true}},"email":{"edit":{"label":"Email","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Email","searchable":true,"sortable":true}},"password":{"edit":{"label":"Password","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Password","searchable":true,"sortable":true}},"resetPasswordToken":{"edit":{"label":"ResetPasswordToken","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"ResetPasswordToken","searchable":true,"sortable":true}},"registrationToken":{"edit":{"label":"RegistrationToken","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"RegistrationToken","searchable":true,"sortable":true}},"isActive":{"edit":{"label":"IsActive","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"IsActive","searchable":true,"sortable":true}},"roles":{"edit":{"label":"Roles","description":"","placeholder":"","visible":true,"editable":true,"mainField":"name"},"list":{"label":"Roles","searchable":false,"sortable":false}},"blocked":{"edit":{"label":"Blocked","description":"","placeholder":"","visible":true,"editable":true},"list":{"label":"Blocked","searchable":true,"sortable":true}}},"layouts":{"list":["id","firstname","lastname","username"],"editRelations":["roles"],"edit":[[{"name":"firstname","size":6},{"name":"lastname","size":6}],[{"name":"username","size":6},{"name":"email","size":6}],[{"name":"password","size":6},{"name":"resetPasswordToken","size":6}],[{"name":"registrationToken","size":6},{"name":"isActive","size":4}],[{"name":"blocked","size":4}]]}}	object		
32	model_def_application::articles.articles	{"uid":"application::articles.articles","collectionName":"articles","kind":"collectionType","info":{"name":"articles"},"options":{"increments":true,"timestamps":["created_at","updated_at"]},"attributes":{"uuid":{"type":"uid","private":false},"title":{"type":"string","required":true},"slug":{"type":"string","required":true},"meta_keywords":{"type":"string","required":false},"meta_description":{"type":"string","required":false},"meta_thumbnail":{"model":"file","via":"related","allowedTypes":["images"],"plugin":"upload","required":false},"content":{"type":"richtext","required":true},"published":{"type":"boolean","default":false,"required":false},"likes":{"via":"article","collection":"likes","isVirtual":true},"created_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true},"updated_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true}}}	object	\N	\N
39	model_def_plugins::users-permissions.permission	{"uid":"plugins::users-permissions.permission","collectionName":"users-permissions_permission","kind":"collectionType","info":{"name":"permission","description":""},"options":{"timestamps":false},"attributes":{"type":{"type":"string","required":true,"configurable":false},"controller":{"type":"string","required":true,"configurable":false},"action":{"type":"string","required":true,"configurable":false},"enabled":{"type":"boolean","required":true,"configurable":false},"policy":{"type":"string","configurable":false},"role":{"model":"role","via":"permissions","plugin":"users-permissions","configurable":false},"created_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true},"updated_by":{"model":"user","plugin":"admin","configurable":false,"writable":false,"private":true}}}	object	\N	\N
\.


--
-- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.likes (id, uuid, reaction_type, article, session, created_at, updated_at, created_by, updated_by) FROM stdin;
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.sessions (id, uuid, ip_address, created_at, updated_at, created_by, updated_by) FROM stdin;
\.


--
-- Data for Name: strapi_administrator; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.strapi_administrator (id, username, email, password, "resetPasswordToken", blocked, firstname, lastname, "registrationToken", "isActive") FROM stdin;
1	Eden Reich	eden.reich@gmail.com	$2a$10$LT80fS.zZnmi2iQrVQGaEeZVUklaTsdMqWQHcVSFKbyqWaPAF7MpK	\N	f	Eden	Reich	\N	t
\.


--
-- Data for Name: strapi_permission; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.strapi_permission (id, action, subject, fields, conditions, role, created_at, updated_at) FROM stdin;
1	plugins::content-manager.explorer.create	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	[]	2	2020-11-19 04:29:13.193+00	2020-11-19 04:29:13.229+00
2	plugins::content-manager.explorer.create	application::likes.likes	["uuid", "reaction_type", "article", "session"]	[]	2	2020-11-19 04:29:13.193+00	2020-11-19 04:29:13.229+00
3	plugins::content-manager.explorer.create	application::sessions.sessions	["uuid", "ip_address", "likes"]	[]	2	2020-11-19 04:29:13.194+00	2020-11-19 04:29:13.23+00
4	plugins::content-manager.explorer.read	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	[]	2	2020-11-19 04:29:13.194+00	2020-11-19 04:29:13.23+00
5	plugins::content-manager.explorer.read	application::likes.likes	["uuid", "reaction_type", "article", "session"]	[]	2	2020-11-19 04:29:13.194+00	2020-11-19 04:29:13.23+00
6	plugins::content-manager.explorer.read	application::sessions.sessions	["uuid", "ip_address", "likes"]	[]	2	2020-11-19 04:29:13.195+00	2020-11-19 04:29:13.23+00
7	plugins::content-manager.explorer.update	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	[]	2	2020-11-19 04:29:13.195+00	2020-11-19 04:29:13.23+00
8	plugins::content-manager.explorer.update	application::likes.likes	["uuid", "reaction_type", "article", "session"]	[]	2	2020-11-19 04:29:13.195+00	2020-11-19 04:29:13.231+00
9	plugins::content-manager.explorer.update	application::sessions.sessions	["uuid", "ip_address", "likes"]	[]	2	2020-11-19 04:29:13.195+00	2020-11-19 04:29:13.231+00
10	plugins::content-manager.explorer.delete	application::articles.articles	\N	[]	2	2020-11-19 04:29:13.196+00	2020-11-19 04:29:13.231+00
11	plugins::content-manager.explorer.delete	application::likes.likes	\N	[]	2	2020-11-19 04:29:13.282+00	2020-11-19 04:29:13.302+00
12	plugins::content-manager.explorer.delete	application::sessions.sessions	\N	[]	2	2020-11-19 04:29:13.289+00	2020-11-19 04:29:13.314+00
13	plugins::upload.read	\N	\N	[]	2	2020-11-19 04:29:13.29+00	2020-11-19 04:29:13.315+00
14	plugins::upload.assets.create	\N	\N	[]	2	2020-11-19 04:29:13.29+00	2020-11-19 04:29:13.315+00
15	plugins::upload.assets.update	\N	\N	[]	2	2020-11-19 04:29:13.29+00	2020-11-19 04:29:13.315+00
16	plugins::upload.assets.download	\N	\N	[]	2	2020-11-19 04:29:13.29+00	2020-11-19 04:29:13.315+00
17	plugins::upload.assets.copy-link	\N	\N	[]	2	2020-11-19 04:29:13.291+00	2020-11-19 04:29:13.315+00
18	plugins::content-manager.explorer.create	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	["admin::is-creator"]	3	2020-11-19 04:29:13.361+00	2020-11-19 04:29:13.393+00
19	plugins::content-manager.explorer.create	application::likes.likes	["uuid", "reaction_type", "article", "session"]	["admin::is-creator"]	3	2020-11-19 04:29:13.362+00	2020-11-19 04:29:13.393+00
20	plugins::content-manager.explorer.create	application::sessions.sessions	["uuid", "ip_address", "likes"]	["admin::is-creator"]	3	2020-11-19 04:29:13.362+00	2020-11-19 04:29:13.393+00
22	plugins::content-manager.explorer.read	application::likes.likes	["uuid", "reaction_type", "article", "session"]	["admin::is-creator"]	3	2020-11-19 04:29:13.362+00	2020-11-19 04:29:13.394+00
27	plugins::content-manager.explorer.delete	application::articles.articles	\N	["admin::is-creator"]	3	2020-11-19 04:29:13.364+00	2020-11-19 04:29:13.395+00
28	plugins::content-manager.explorer.delete	application::likes.likes	\N	["admin::is-creator"]	3	2020-11-19 04:29:13.443+00	2020-11-19 04:29:13.46+00
29	plugins::content-manager.explorer.delete	application::sessions.sessions	\N	["admin::is-creator"]	3	2020-11-19 04:29:13.449+00	2020-11-19 04:29:13.469+00
30	plugins::upload.read	\N	\N	["admin::is-creator"]	3	2020-11-19 04:29:13.449+00	2020-11-19 04:29:13.469+00
34	plugins::upload.assets.copy-link	\N	\N	[]	3	2020-11-19 04:29:13.45+00	2020-11-19 04:29:13.47+00
35	plugins::content-manager.explorer.create	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	[]	1	2020-11-19 04:29:13.536+00	2020-11-19 04:29:13.567+00
37	plugins::content-manager.explorer.create	application::sessions.sessions	["uuid", "ip_address", "likes"]	[]	1	2020-11-19 04:29:13.536+00	2020-11-19 04:29:13.567+00
40	plugins::content-manager.explorer.read	application::likes.likes	["uuid", "reaction_type", "article", "session"]	[]	1	2020-11-19 04:29:13.537+00	2020-11-19 04:29:13.568+00
41	plugins::content-manager.explorer.read	application::sessions.sessions	["uuid", "ip_address", "likes"]	[]	1	2020-11-19 04:29:13.537+00	2020-11-19 04:29:13.568+00
43	plugins::content-manager.explorer.update	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	[]	1	2020-11-19 04:29:13.538+00	2020-11-19 04:29:13.569+00
45	plugins::content-manager.explorer.update	application::sessions.sessions	["uuid", "ip_address", "likes"]	[]	1	2020-11-19 04:29:13.615+00	2020-11-19 04:29:13.639+00
48	plugins::content-manager.explorer.delete	application::likes.likes	\N	[]	1	2020-11-19 04:29:13.624+00	2020-11-19 04:29:13.654+00
50	plugins::content-manager.explorer.delete	plugins::users-permissions.user	\N	[]	1	2020-11-19 04:29:13.624+00	2020-11-19 04:29:13.654+00
53	plugins::upload.assets.create	\N	\N	[]	1	2020-11-19 04:29:13.625+00	2020-11-19 04:29:13.655+00
54	plugins::upload.assets.update	\N	\N	[]	1	2020-11-19 04:29:13.625+00	2020-11-19 04:29:13.655+00
55	plugins::upload.assets.download	\N	\N	[]	1	2020-11-19 04:29:13.699+00	2020-11-19 04:29:13.719+00
59	plugins::content-manager.collection-types.configure-view	\N	\N	[]	1	2020-11-19 04:29:13.709+00	2020-11-19 04:29:13.739+00
60	plugins::content-manager.components.configure-layout	\N	\N	[]	1	2020-11-19 04:29:13.709+00	2020-11-19 04:29:13.739+00
62	plugins::users-permissions.roles.read	\N	\N	[]	1	2020-11-19 04:29:13.709+00	2020-11-19 04:29:13.739+00
63	plugins::users-permissions.roles.update	\N	\N	[]	1	2020-11-19 04:29:13.709+00	2020-11-19 04:29:13.739+00
65	plugins::users-permissions.providers.read	\N	\N	[]	1	2020-11-19 04:29:13.776+00	2020-11-19 04:29:13.788+00
69	plugins::users-permissions.advanced-settings.read	\N	\N	[]	1	2020-11-19 04:29:13.795+00	2020-11-19 04:29:13.824+00
71	admin::marketplace.read	\N	\N	[]	1	2020-11-19 04:29:13.795+00	2020-11-19 04:29:13.825+00
72	admin::marketplace.plugins.install	\N	\N	[]	1	2020-11-19 04:29:13.795+00	2020-11-19 04:29:13.825+00
74	admin::webhooks.create	\N	\N	[]	1	2020-11-19 04:29:13.796+00	2020-11-19 04:29:13.825+00
75	admin::webhooks.read	\N	\N	[]	1	2020-11-19 04:29:13.85+00	2020-11-19 04:29:13.873+00
79	admin::users.read	\N	\N	[]	1	2020-11-19 04:29:13.882+00	2020-11-19 04:29:13.911+00
80	admin::users.update	\N	\N	[]	1	2020-11-19 04:29:13.882+00	2020-11-19 04:29:13.911+00
81	admin::users.delete	\N	\N	[]	1	2020-11-19 04:29:13.882+00	2020-11-19 04:29:13.911+00
84	admin::roles.update	\N	\N	[]	1	2020-11-19 04:29:13.883+00	2020-11-19 04:29:13.912+00
85	admin::roles.delete	\N	\N	[]	1	2020-11-19 04:29:13.93+00	2020-11-19 04:29:13.954+00
21	plugins::content-manager.explorer.read	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	["admin::is-creator"]	3	2020-11-19 04:29:13.362+00	2020-11-19 04:29:13.393+00
31	plugins::upload.assets.create	\N	\N	[]	3	2020-11-19 04:29:13.45+00	2020-11-19 04:29:13.47+00
38	plugins::content-manager.explorer.create	plugins::users-permissions.user	["username", "email", "provider", "password", "resetPasswordToken", "confirmationToken", "confirmed", "blocked", "role"]	[]	1	2020-11-19 04:29:13.537+00	2020-11-19 04:29:13.567+00
49	plugins::content-manager.explorer.delete	application::sessions.sessions	\N	[]	1	2020-11-19 04:29:13.624+00	2020-11-19 04:29:13.654+00
61	plugins::users-permissions.roles.create	\N	\N	[]	1	2020-11-19 04:29:13.709+00	2020-11-19 04:29:13.739+00
73	admin::marketplace.plugins.uninstall	\N	\N	[]	1	2020-11-19 04:29:13.796+00	2020-11-19 04:29:13.825+00
83	admin::roles.read	\N	\N	[]	1	2020-11-19 04:29:13.883+00	2020-11-19 04:29:13.912+00
23	plugins::content-manager.explorer.read	application::sessions.sessions	["uuid", "ip_address", "likes"]	["admin::is-creator"]	3	2020-11-19 04:29:13.363+00	2020-11-19 04:29:13.394+00
44	plugins::content-manager.explorer.update	application::likes.likes	["uuid", "reaction_type", "article", "session"]	[]	1	2020-11-19 04:29:13.538+00	2020-11-19 04:29:13.569+00
52	plugins::upload.read	\N	\N	[]	1	2020-11-19 04:29:13.624+00	2020-11-19 04:29:13.655+00
64	plugins::users-permissions.roles.delete	\N	\N	[]	1	2020-11-19 04:29:13.71+00	2020-11-19 04:29:13.739+00
70	plugins::users-permissions.advanced-settings.update	\N	\N	[]	1	2020-11-19 04:29:13.795+00	2020-11-19 04:29:13.825+00
82	admin::roles.create	\N	\N	[]	1	2020-11-19 04:29:13.883+00	2020-11-19 04:29:13.911+00
24	plugins::content-manager.explorer.update	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	["admin::is-creator"]	3	2020-11-19 04:29:13.363+00	2020-11-19 04:29:13.394+00
32	plugins::upload.assets.update	\N	\N	["admin::is-creator"]	3	2020-11-19 04:29:13.45+00	2020-11-19 04:29:13.47+00
36	plugins::content-manager.explorer.create	application::likes.likes	["uuid", "reaction_type", "article", "session"]	[]	1	2020-11-19 04:29:13.536+00	2020-11-19 04:29:13.567+00
46	plugins::content-manager.explorer.update	plugins::users-permissions.user	["username", "email", "provider", "password", "resetPasswordToken", "confirmationToken", "confirmed", "blocked", "role"]	[]	1	2020-11-19 04:29:13.623+00	2020-11-19 04:29:13.654+00
56	plugins::upload.assets.copy-link	\N	\N	[]	1	2020-11-19 04:29:13.702+00	2020-11-19 04:29:13.733+00
66	plugins::users-permissions.providers.update	\N	\N	[]	1	2020-11-19 04:29:13.785+00	2020-11-19 04:29:13.81+00
76	admin::webhooks.update	\N	\N	[]	1	2020-11-19 04:29:13.868+00	2020-11-19 04:29:13.89+00
25	plugins::content-manager.explorer.update	application::likes.likes	["uuid", "reaction_type", "article", "session"]	["admin::is-creator"]	3	2020-11-19 04:29:13.363+00	2020-11-19 04:29:13.394+00
42	plugins::content-manager.explorer.read	plugins::users-permissions.user	["username", "email", "provider", "password", "resetPasswordToken", "confirmationToken", "confirmed", "blocked", "role"]	[]	1	2020-11-19 04:29:13.538+00	2020-11-19 04:29:13.568+00
51	plugins::content-type-builder.read	\N	\N	[]	1	2020-11-19 04:29:13.624+00	2020-11-19 04:29:13.655+00
58	plugins::content-manager.single-types.configure-view	\N	\N	[]	1	2020-11-19 04:29:13.708+00	2020-11-19 04:29:13.738+00
68	plugins::users-permissions.email-templates.update	\N	\N	[]	1	2020-11-19 04:29:13.795+00	2020-11-19 04:29:13.824+00
78	admin::users.create	\N	\N	[]	1	2020-11-19 04:29:13.875+00	2020-11-19 04:29:13.905+00
26	plugins::content-manager.explorer.update	application::sessions.sessions	["uuid", "ip_address", "likes"]	["admin::is-creator"]	3	2020-11-19 04:29:13.363+00	2020-11-19 04:29:13.394+00
33	plugins::upload.assets.download	\N	\N	[]	3	2020-11-19 04:29:13.45+00	2020-11-19 04:29:13.47+00
39	plugins::content-manager.explorer.read	application::articles.articles	["uuid", "title", "slug", "meta_keywords", "meta_description", "meta_thumbnail", "content", "published", "likes"]	[]	1	2020-11-19 04:29:13.537+00	2020-11-19 04:29:13.567+00
47	plugins::content-manager.explorer.delete	application::articles.articles	\N	[]	1	2020-11-19 04:29:13.623+00	2020-11-19 04:29:13.654+00
57	plugins::upload.settings.read	\N	\N	[]	1	2020-11-19 04:29:13.708+00	2020-11-19 04:29:13.738+00
67	plugins::users-permissions.email-templates.read	\N	\N	[]	1	2020-11-19 04:29:13.79+00	2020-11-19 04:29:13.819+00
77	admin::webhooks.delete	\N	\N	[]	1	2020-11-19 04:29:13.871+00	2020-11-19 04:29:13.897+00
\.


--
-- Data for Name: strapi_role; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.strapi_role (id, name, code, description, created_at, updated_at) FROM stdin;
1	Super Admin	strapi-super-admin	Super Admins can access and manage all features and settings.	2020-11-19 04:29:13.118+00	2020-11-19 04:29:13.118+00
2	Editor	strapi-editor	Editors can manage and publish contents including those of other users.	2020-11-19 04:29:13.144+00	2020-11-19 04:29:13.144+00
3	Author	strapi-author	Authors can manage the content they have created.	2020-11-19 04:29:13.162+00	2020-11-19 04:29:13.162+00
\.


--
-- Data for Name: strapi_users_roles; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.strapi_users_roles (id, user_id, role_id) FROM stdin;
1	1	1
\.


--
-- Data for Name: strapi_webhooks; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.strapi_webhooks (id, name, url, headers, events, enabled) FROM stdin;
\.


--
-- Data for Name: upload_file; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.upload_file (id, name, "alternativeText", caption, width, height, formats, hash, ext, mime, size, url, "previewUrl", provider, provider_metadata, created_at, updated_at, created_by, updated_by) FROM stdin;
2	raspberry_pi_cluster-min			3959	2831	{"large": {"ext": ".jpeg", "url": "/uploads/large_raspberry_pi_cluster-min_93bc7dd448.jpeg", "hash": "large_raspberry_pi_cluster-min_93bc7dd448", "mime": "image/jpeg", "path": null, "size": 106.31, "width": 1000, "height": 715}, "small": {"ext": ".jpeg", "url": "/uploads/small_raspberry_pi_cluster-min_93bc7dd448.jpeg", "hash": "small_raspberry_pi_cluster-min_93bc7dd448", "mime": "image/jpeg", "path": null, "size": 32.4, "width": 500, "height": 358}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_raspberry_pi_cluster-min_93bc7dd448.jpeg", "hash": "medium_raspberry_pi_cluster-min_93bc7dd448", "mime": "image/jpeg", "path": null, "size": 63.14, "width": 750, "height": 536}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_raspberry_pi_cluster-min_93bc7dd448.jpeg", "hash": "thumbnail_raspberry_pi_cluster-min_93bc7dd448", "mime": "image/jpeg", "path": null, "size": 8.28, "width": 218, "height": 156}}	raspberry_pi_cluster-min_93bc7dd448	.jpeg	image/jpeg	1188.62	/uploads/raspberry_pi_cluster-min_93bc7dd448.jpeg	\N	local	\N	52342-02-27 01:28:51	52342-02-27 01:28:51	\N	\N
4	Raspberry_pi_tower-min			3024	4032	{"large": {"ext": ".jpeg", "url": "/uploads/large_Raspberry_pi_tower-min_f0e62c5a02.jpeg", "hash": "large_Raspberry_pi_tower-min_f0e62c5a02", "mime": "image/jpeg", "path": null, "size": 110.1, "width": 750, "height": 1000}, "small": {"ext": ".jpeg", "url": "/uploads/small_Raspberry_pi_tower-min_f0e62c5a02.jpeg", "hash": "small_Raspberry_pi_tower-min_f0e62c5a02", "mime": "image/jpeg", "path": null, "size": 37.21, "width": 375, "height": 500}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_Raspberry_pi_tower-min_f0e62c5a02.jpeg", "hash": "medium_Raspberry_pi_tower-min_f0e62c5a02", "mime": "image/jpeg", "path": null, "size": 71.63, "width": 563, "height": 750}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_Raspberry_pi_tower-min_f0e62c5a02.jpeg", "hash": "thumbnail_Raspberry_pi_tower-min_f0e62c5a02", "mime": "image/jpeg", "path": null, "size": 6.07, "width": 117, "height": 156}}	Raspberry_pi_tower-min_f0e62c5a02	.jpeg	image/jpeg	1179.83	/uploads/Raspberry_pi_tower-min_f0e62c5a02.jpeg	\N	local	\N	52342-04-07 03:40:19	52342-04-07 03:40:19	\N	\N
5	pi_cluster_advanced			2986	2969	{"large": {"ext": ".jpeg", "url": "/uploads/large_pi_cluster_advanced_3aa88e9daa.jpeg", "hash": "large_pi_cluster_advanced_3aa88e9daa", "mime": "image/jpeg", "path": null, "size": 163.53, "width": 1000, "height": 994}, "small": {"ext": ".jpeg", "url": "/uploads/small_pi_cluster_advanced_3aa88e9daa.jpeg", "hash": "small_pi_cluster_advanced_3aa88e9daa", "mime": "image/jpeg", "path": null, "size": 55.98, "width": 500, "height": 497}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_pi_cluster_advanced_3aa88e9daa.jpeg", "hash": "medium_pi_cluster_advanced_3aa88e9daa", "mime": "image/jpeg", "path": null, "size": 105.63, "width": 750, "height": 746}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_pi_cluster_advanced_3aa88e9daa.jpeg", "hash": "thumbnail_pi_cluster_advanced_3aa88e9daa", "mime": "image/jpeg", "path": null, "size": 8.38, "width": 157, "height": 156}}	pi_cluster_advanced_3aa88e9daa	.jpeg	image/jpeg	1053.41	/uploads/pi_cluster_advanced_3aa88e9daa.jpeg	\N	local	\N	52400-08-29 19:21:20	52400-08-30 18:27:40	\N	\N
6	pi_cluster_advanced			4032	3024	{"large": {"ext": ".jpeg", "url": "/uploads/large_pi_cluster_advanced_19860d0c11.jpeg", "hash": "large_pi_cluster_advanced_19860d0c11", "mime": "image/jpeg", "path": null, "size": 115.46, "width": 1000, "height": 750}, "small": {"ext": ".jpeg", "url": "/uploads/small_pi_cluster_advanced_19860d0c11.jpeg", "hash": "small_pi_cluster_advanced_19860d0c11", "mime": "image/jpeg", "path": null, "size": 36.65, "width": 500, "height": 375}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_pi_cluster_advanced_19860d0c11.jpeg", "hash": "medium_pi_cluster_advanced_19860d0c11", "mime": "image/jpeg", "path": null, "size": 72.51, "width": 750, "height": 563}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_pi_cluster_advanced_19860d0c11.jpeg", "hash": "thumbnail_pi_cluster_advanced_19860d0c11", "mime": "image/jpeg", "path": null, "size": 9.21, "width": 208, "height": 156}}	pi_cluster_advanced_19860d0c11	.jpeg	image/jpeg	1315.95	/uploads/pi_cluster_advanced_19860d0c11.jpeg	\N	local	\N	52400-11-10 10:03:20	52400-11-10 10:03:20	\N	\N
7	micro_sd_cards			3403	2970	{"large": {"ext": ".jpeg", "url": "/uploads/large_micro_sd_cards_6a66f140a0.jpeg", "hash": "large_micro_sd_cards_6a66f140a0", "mime": "image/jpeg", "path": null, "size": 137.64, "width": 1000, "height": 873}, "small": {"ext": ".jpeg", "url": "/uploads/small_micro_sd_cards_6a66f140a0.jpeg", "hash": "small_micro_sd_cards_6a66f140a0", "mime": "image/jpeg", "path": null, "size": 44.31, "width": 500, "height": 436}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_micro_sd_cards_6a66f140a0.jpeg", "hash": "medium_micro_sd_cards_6a66f140a0", "mime": "image/jpeg", "path": null, "size": 85.19, "width": 750, "height": 655}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_micro_sd_cards_6a66f140a0.jpeg", "hash": "thumbnail_micro_sd_cards_6a66f140a0", "mime": "image/jpeg", "path": null, "size": 8.33, "width": 179, "height": 156}}	micro_sd_cards_6a66f140a0	.jpeg	image/jpeg	1166.73	/uploads/micro_sd_cards_6a66f140a0.jpeg	\N	local	\N	52400-11-12 23:11:31	52400-11-12 23:11:31	\N	\N
8	pi_holder			4032	3024	{"large": {"ext": ".jpeg", "url": "/uploads/large_pi_holder_f465a8782f.jpeg", "hash": "large_pi_holder_f465a8782f", "mime": "image/jpeg", "path": null, "size": 83.22, "width": 1000, "height": 750}, "small": {"ext": ".jpeg", "url": "/uploads/small_pi_holder_f465a8782f.jpeg", "hash": "small_pi_holder_f465a8782f", "mime": "image/jpeg", "path": null, "size": 25.31, "width": 500, "height": 375}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_pi_holder_f465a8782f.jpeg", "hash": "medium_pi_holder_f465a8782f", "mime": "image/jpeg", "path": null, "size": 51.12, "width": 750, "height": 563}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_pi_holder_f465a8782f.jpeg", "hash": "thumbnail_pi_holder_f465a8782f", "mime": "image/jpeg", "path": null, "size": 5.99, "width": 208, "height": 156}}	pi_holder_f465a8782f	.jpeg	image/jpeg	1149.29	/uploads/pi_holder_f465a8782f.jpeg	\N	local	\N	52400-11-16 17:58:41	52400-11-16 17:58:41	\N	\N
9	samsung_t7_ssd_drive_filpped			4032	3024	{"large": {"ext": ".jpeg", "url": "/uploads/large_samsung_t7_ssd_drive_filpped_f02f040d47.jpeg", "hash": "large_samsung_t7_ssd_drive_filpped_f02f040d47", "mime": "image/jpeg", "path": null, "size": 44.81, "width": 1000, "height": 750}, "small": {"ext": ".jpeg", "url": "/uploads/small_samsung_t7_ssd_drive_filpped_f02f040d47.jpeg", "hash": "small_samsung_t7_ssd_drive_filpped_f02f040d47", "mime": "image/jpeg", "path": null, "size": 12.26, "width": 500, "height": 375}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_samsung_t7_ssd_drive_filpped_f02f040d47.jpeg", "hash": "medium_samsung_t7_ssd_drive_filpped_f02f040d47", "mime": "image/jpeg", "path": null, "size": 25.03, "width": 750, "height": 563}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_samsung_t7_ssd_drive_filpped_f02f040d47.jpeg", "hash": "thumbnail_samsung_t7_ssd_drive_filpped_f02f040d47", "mime": "image/jpeg", "path": null, "size": 3.57, "width": 208, "height": 156}}	samsung_t7_ssd_drive_filpped_f02f040d47	.jpeg	image/jpeg	923.98	/uploads/samsung_t7_ssd_drive_filpped_f02f040d47.jpeg	\N	local	\N	52400-11-24 18:39:17	52400-11-24 18:39:17	\N	\N
10	samsung_t7_ssd_drive			4032	3024	{"large": {"ext": ".jpeg", "url": "/uploads/large_samsung_t7_ssd_drive_b5ef69b76f.jpeg", "hash": "large_samsung_t7_ssd_drive_b5ef69b76f", "mime": "image/jpeg", "path": null, "size": 44.45, "width": 1000, "height": 750}, "small": {"ext": ".jpeg", "url": "/uploads/small_samsung_t7_ssd_drive_b5ef69b76f.jpeg", "hash": "small_samsung_t7_ssd_drive_b5ef69b76f", "mime": "image/jpeg", "path": null, "size": 13.25, "width": 500, "height": 375}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_samsung_t7_ssd_drive_b5ef69b76f.jpeg", "hash": "medium_samsung_t7_ssd_drive_b5ef69b76f", "mime": "image/jpeg", "path": null, "size": 26.28, "width": 750, "height": 563}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_samsung_t7_ssd_drive_b5ef69b76f.jpeg", "hash": "thumbnail_samsung_t7_ssd_drive_b5ef69b76f", "mime": "image/jpeg", "path": null, "size": 3.82, "width": 208, "height": 156}}	samsung_t7_ssd_drive_b5ef69b76f	.jpeg	image/jpeg	978.59	/uploads/samsung_t7_ssd_drive_b5ef69b76f.jpeg	\N	local	\N	52400-11-24 18:53:33	52400-11-24 18:53:33	\N	\N
11	pi_holder_side			2222	2430	{"large": {"ext": ".jpeg", "url": "/uploads/large_pi_holder_side_8bed3793c8.jpeg", "hash": "large_pi_holder_side_8bed3793c8", "mime": "image/jpeg", "path": null, "size": 47.91, "width": 914, "height": 1000}, "small": {"ext": ".jpeg", "url": "/uploads/small_pi_holder_side_8bed3793c8.jpeg", "hash": "small_pi_holder_side_8bed3793c8", "mime": "image/jpeg", "path": null, "size": 16.18, "width": 457, "height": 500}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_pi_holder_side_8bed3793c8.jpeg", "hash": "medium_pi_holder_side_8bed3793c8", "mime": "image/jpeg", "path": null, "size": 29.94, "width": 686, "height": 750}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_pi_holder_side_8bed3793c8.jpeg", "hash": "thumbnail_pi_holder_side_8bed3793c8", "mime": "image/jpeg", "path": null, "size": 2.88, "width": 143, "height": 156}}	pi_holder_side_8bed3793c8	.jpeg	image/jpeg	284.63	/uploads/pi_holder_side_8bed3793c8.jpeg	\N	local	\N	52400-12-01 00:16:46	52400-12-01 00:16:46	\N	\N
12	attach_usb_hub			3011	3596	{"large": {"ext": ".jpeg", "url": "/uploads/large_attach_usb_hub_156f7d7d71.jpeg", "hash": "large_attach_usb_hub_156f7d7d71", "mime": "image/jpeg", "path": null, "size": 106.38, "width": 837, "height": 1000}, "small": {"ext": ".jpeg", "url": "/uploads/small_attach_usb_hub_156f7d7d71.jpeg", "hash": "small_attach_usb_hub_156f7d7d71", "mime": "image/jpeg", "path": null, "size": 37.79, "width": 419, "height": 500}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_attach_usb_hub_156f7d7d71.jpeg", "hash": "medium_attach_usb_hub_156f7d7d71", "mime": "image/jpeg", "path": null, "size": 67.39, "width": 628, "height": 750}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_attach_usb_hub_156f7d7d71.jpeg", "hash": "thumbnail_attach_usb_hub_156f7d7d71", "mime": "image/jpeg", "path": null, "size": 6.63, "width": 131, "height": 156}}	attach_usb_hub_156f7d7d71	.jpeg	image/jpeg	1148.78	/uploads/attach_usb_hub_156f7d7d71.jpeg	\N	local	\N	52400-12-24 00:35:35	52400-12-27 20:25:21	\N	\N
13	attach_network_switch			2993	3382	{"large": {"ext": ".jpeg", "url": "/uploads/large_attach_network_switch_3081a73f10.jpeg", "hash": "large_attach_network_switch_3081a73f10", "mime": "image/jpeg", "path": null, "size": 117.19, "width": 885, "height": 1000}, "small": {"ext": ".jpeg", "url": "/uploads/small_attach_network_switch_3081a73f10.jpeg", "hash": "small_attach_network_switch_3081a73f10", "mime": "image/jpeg", "path": null, "size": 38.24, "width": 442, "height": 500}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_attach_network_switch_3081a73f10.jpeg", "hash": "medium_attach_network_switch_3081a73f10", "mime": "image/jpeg", "path": null, "size": 71.37, "width": 664, "height": 750}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_attach_network_switch_3081a73f10.jpeg", "hash": "thumbnail_attach_network_switch_3081a73f10", "mime": "image/jpeg", "path": null, "size": 6.07, "width": 138, "height": 156}}	attach_network_switch_3081a73f10	.jpeg	image/jpeg	1078.51	/uploads/attach_network_switch_3081a73f10.jpeg	\N	local	\N	52400-12-24 00:39:51	52400-12-27 05:24:16	\N	\N
14	expand_holes			4032	3024	{"large": {"ext": ".jpeg", "url": "/uploads/large_expand_holes_242600bbb3.jpeg", "hash": "large_expand_holes_242600bbb3", "mime": "image/jpeg", "path": null, "size": 93.88, "width": 1000, "height": 750}, "small": {"ext": ".jpeg", "url": "/uploads/small_expand_holes_242600bbb3.jpeg", "hash": "small_expand_holes_242600bbb3", "mime": "image/jpeg", "path": null, "size": 32.63, "width": 500, "height": 375}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_expand_holes_242600bbb3.jpeg", "hash": "medium_expand_holes_242600bbb3", "mime": "image/jpeg", "path": null, "size": 61.32, "width": 750, "height": 563}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_expand_holes_242600bbb3.jpeg", "hash": "thumbnail_expand_holes_242600bbb3", "mime": "image/jpeg", "path": null, "size": 8.76, "width": 208, "height": 156}}	expand_holes_242600bbb3	.jpeg	image/jpeg	1134.41	/uploads/expand_holes_242600bbb3.jpeg	\N	local	\N	52400-12-24 00:49:16	52400-12-24 00:49:16	\N	\N
15	sd_cards			4032	3024	{"large": {"ext": ".jpeg", "url": "/uploads/large_sd_cards_58a79309ce.jpeg", "hash": "large_sd_cards_58a79309ce", "mime": "image/jpeg", "path": null, "size": 35.77, "width": 1000, "height": 750}, "small": {"ext": ".jpeg", "url": "/uploads/small_sd_cards_58a79309ce.jpeg", "hash": "small_sd_cards_58a79309ce", "mime": "image/jpeg", "path": null, "size": 11.79, "width": 500, "height": 375}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_sd_cards_58a79309ce.jpeg", "hash": "medium_sd_cards_58a79309ce", "mime": "image/jpeg", "path": null, "size": 22.36, "width": 750, "height": 563}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_sd_cards_58a79309ce.jpeg", "hash": "thumbnail_sd_cards_58a79309ce", "mime": "image/jpeg", "path": null, "size": 3.22, "width": 208, "height": 156}}	sd_cards_58a79309ce	.jpeg	image/jpeg	609.78	/uploads/sd_cards_58a79309ce.jpeg	\N	local	\N	52401-09-01 05:48:20	52401-09-01 05:48:20	\N	\N
16	attach_sd_cards			3024	4032	{"large": {"ext": ".jpeg", "url": "/uploads/large_attach_sd_cards_a7a92f7d18.jpeg", "hash": "large_attach_sd_cards_a7a92f7d18", "mime": "image/jpeg", "path": null, "size": 76.69, "width": 750, "height": 1000}, "small": {"ext": ".jpeg", "url": "/uploads/small_attach_sd_cards_a7a92f7d18.jpeg", "hash": "small_attach_sd_cards_a7a92f7d18", "mime": "image/jpeg", "path": null, "size": 24.43, "width": 375, "height": 500}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_attach_sd_cards_a7a92f7d18.jpeg", "hash": "medium_attach_sd_cards_a7a92f7d18", "mime": "image/jpeg", "path": null, "size": 47.79, "width": 563, "height": 750}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_attach_sd_cards_a7a92f7d18.jpeg", "hash": "thumbnail_attach_sd_cards_a7a92f7d18", "mime": "image/jpeg", "path": null, "size": 4.09, "width": 117, "height": 156}}	attach_sd_cards_a7a92f7d18	.jpeg	image/jpeg	1117.34	/uploads/attach_sd_cards_a7a92f7d18.jpeg	\N	local	\N	52404-05-11 19:05:40	52404-05-11 19:05:40	\N	\N
17	ventilator_connection			2956	2516	{"large": {"ext": ".jpeg", "url": "/uploads/large_ventilator_connection_5b260a2d83.jpeg", "hash": "large_ventilator_connection_5b260a2d83", "mime": "image/jpeg", "path": null, "size": 100.89, "width": 1000, "height": 851}, "small": {"ext": ".jpeg", "url": "/uploads/small_ventilator_connection_5b260a2d83.jpeg", "hash": "small_ventilator_connection_5b260a2d83", "mime": "image/jpeg", "path": null, "size": 33.57, "width": 500, "height": 426}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_ventilator_connection_5b260a2d83.jpeg", "hash": "medium_ventilator_connection_5b260a2d83", "mime": "image/jpeg", "path": null, "size": 62.56, "width": 750, "height": 638}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_ventilator_connection_5b260a2d83.jpeg", "hash": "thumbnail_ventilator_connection_5b260a2d83", "mime": "image/jpeg", "path": null, "size": 7.08, "width": 183, "height": 156}}	ventilator_connection_5b260a2d83	.jpeg	image/jpeg	949.80	/uploads/ventilator_connection_5b260a2d83.jpeg	\N	local	\N	52404-05-15 07:29:11	52404-05-16 08:47:42	\N	\N
18	usbhub_connections			3024	2663	{"large": {"ext": ".jpeg", "url": "/uploads/large_usbhub_connections_6d74666747.jpeg", "hash": "large_usbhub_connections_6d74666747", "mime": "image/jpeg", "path": null, "size": 77.55, "width": 1000, "height": 881}, "small": {"ext": ".jpeg", "url": "/uploads/small_usbhub_connections_6d74666747.jpeg", "hash": "small_usbhub_connections_6d74666747", "mime": "image/jpeg", "path": null, "size": 25.59, "width": 500, "height": 440}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_usbhub_connections_6d74666747.jpeg", "hash": "medium_usbhub_connections_6d74666747", "mime": "image/jpeg", "path": null, "size": 46.81, "width": 750, "height": 660}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_usbhub_connections_6d74666747.jpeg", "hash": "thumbnail_usbhub_connections_6d74666747", "mime": "image/jpeg", "path": null, "size": 5.92, "width": 177, "height": 156}}	usbhub_connections_6d74666747	.jpeg	image/jpeg	774.33	/uploads/usbhub_connections_6d74666747.jpeg	\N	local	\N	52404-05-24 05:19:34	52404-05-24 05:19:34	\N	\N
19	connected			2374	2793	{"large": {"ext": ".jpeg", "url": "/uploads/large_connected_60ac57d172.jpeg", "hash": "large_connected_60ac57d172", "mime": "image/jpeg", "path": null, "size": 148.6, "width": 850, "height": 1000}, "small": {"ext": ".jpeg", "url": "/uploads/small_connected_60ac57d172.jpeg", "hash": "small_connected_60ac57d172", "mime": "image/jpeg", "path": null, "size": 51.23, "width": 425, "height": 500}, "medium": {"ext": ".jpeg", "url": "/uploads/medium_connected_60ac57d172.jpeg", "hash": "medium_connected_60ac57d172", "mime": "image/jpeg", "path": null, "size": 95.55, "width": 637, "height": 750}, "thumbnail": {"ext": ".jpeg", "url": "/uploads/thumbnail_connected_60ac57d172.jpeg", "hash": "thumbnail_connected_60ac57d172", "mime": "image/jpeg", "path": null, "size": 8.04, "width": 133, "height": 156}}	connected_60ac57d172	.jpeg	image/jpeg	793.53	/uploads/connected_60ac57d172.jpeg	\N	local	\N	52404-05-27 22:46:24	52404-05-27 22:46:24	\N	\N
20	kind			1600	800	{"large": {"ext": ".png", "url": "/uploads/large_kind_f6742b85fd.png", "hash": "large_kind_f6742b85fd", "mime": "image/png", "path": null, "size": 45.19, "width": 1000, "height": 500}, "small": {"ext": ".png", "url": "/uploads/small_kind_f6742b85fd.png", "hash": "small_kind_f6742b85fd", "mime": "image/png", "path": null, "size": 21.13, "width": 500, "height": 250}, "medium": {"ext": ".png", "url": "/uploads/medium_kind_f6742b85fd.png", "hash": "medium_kind_f6742b85fd", "mime": "image/png", "path": null, "size": 33.24, "width": 750, "height": 375}, "thumbnail": {"ext": ".png", "url": "/uploads/thumbnail_kind_f6742b85fd.png", "hash": "thumbnail_kind_f6742b85fd", "mime": "image/png", "path": null, "size": 9.91, "width": 245, "height": 123}}	kind_f6742b85fd	.png	image/png	54.19	/uploads/kind_f6742b85fd.png	\N	local	\N	52845-03-16 07:38:05	52845-03-16 07:38:05	\N	\N
\.


--
-- Data for Name: upload_file_morph; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.upload_file_morph (id, upload_file_id, related_id, related_type, field, "order") FROM stdin;
55	5	2	articles	meta_thumbnail	1
57	2	1	articles	meta_thumbnail	1
88	20	3	articles	meta_thumbnail	1
\.


--
-- Data for Name: users-permissions_permission; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public."users-permissions_permission" (id, type, controller, action, enabled, policy, role, created_by, updated_by) FROM stdin;
1	content-manager	components	findcomponent	t		1	\N	\N
2	content-manager	components	findcomponent	f		2	\N	\N
3	content-manager	components	listcomponents	t		1	\N	\N
4	content-manager	components	listcomponents	f		2	\N	\N
5	content-manager	components	updatecomponent	t		1	\N	\N
6	content-manager	components	updatecomponent	f		2	\N	\N
7	content-manager	contentmanager	checkuidavailability	t		1	\N	\N
8	content-manager	contentmanager	checkuidavailability	f		2	\N	\N
9	content-manager	contentmanager	count	t		1	\N	\N
10	content-manager	contentmanager	count	f		2	\N	\N
11	content-manager	contentmanager	create	t		1	\N	\N
12	content-manager	contentmanager	create	f		2	\N	\N
13	content-manager	contentmanager	delete	t		1	\N	\N
14	content-manager	contentmanager	delete	f		2	\N	\N
15	content-manager	contentmanager	deletemany	t		1	\N	\N
16	content-manager	contentmanager	deletemany	f		2	\N	\N
17	content-manager	contentmanager	find	t		1	\N	\N
18	content-manager	contentmanager	find	f		2	\N	\N
19	content-manager	contentmanager	findone	t		1	\N	\N
20	content-manager	contentmanager	findone	f		2	\N	\N
21	content-manager	contentmanager	generateuid	t		1	\N	\N
22	content-manager	contentmanager	generateuid	f		2	\N	\N
23	content-manager	contentmanager	update	t		1	\N	\N
24	content-manager	contentmanager	update	f		2	\N	\N
25	content-manager	contenttypes	findcontenttype	t		1	\N	\N
26	content-manager	contenttypes	findcontenttype	f		2	\N	\N
27	content-manager	contenttypes	listcontenttypes	t		1	\N	\N
28	content-manager	contenttypes	listcontenttypes	f		2	\N	\N
29	content-manager	contenttypes	updatecontenttype	t		1	\N	\N
30	content-manager	contenttypes	updatecontenttype	f		2	\N	\N
31	content-type-builder	componentcategories	deletecategory	t		1	\N	\N
32	content-type-builder	componentcategories	deletecategory	f		2	\N	\N
33	content-type-builder	componentcategories	editcategory	t		1	\N	\N
34	content-type-builder	componentcategories	editcategory	f		2	\N	\N
35	content-type-builder	components	createcomponent	t		1	\N	\N
36	content-type-builder	components	createcomponent	f		2	\N	\N
37	content-type-builder	components	deletecomponent	t		1	\N	\N
38	content-type-builder	components	deletecomponent	f		2	\N	\N
39	content-type-builder	components	getcomponent	t		1	\N	\N
40	content-type-builder	components	getcomponent	f		2	\N	\N
41	content-type-builder	components	getcomponents	t		1	\N	\N
42	content-type-builder	components	getcomponents	f		2	\N	\N
43	content-type-builder	components	updatecomponent	t		1	\N	\N
44	content-type-builder	components	updatecomponent	f		2	\N	\N
45	content-type-builder	connections	getconnections	t		1	\N	\N
46	content-type-builder	connections	getconnections	f		2	\N	\N
47	content-type-builder	contenttypes	createcontenttype	t		1	\N	\N
48	content-type-builder	contenttypes	createcontenttype	f		2	\N	\N
49	content-type-builder	contenttypes	deletecontenttype	t		1	\N	\N
50	content-type-builder	contenttypes	deletecontenttype	f		2	\N	\N
51	content-type-builder	contenttypes	getcontenttype	t		1	\N	\N
52	content-type-builder	contenttypes	getcontenttype	f		2	\N	\N
53	content-type-builder	contenttypes	getcontenttypes	t		1	\N	\N
54	content-type-builder	contenttypes	getcontenttypes	f		2	\N	\N
55	content-type-builder	contenttypes	updatecontenttype	t		1	\N	\N
56	content-type-builder	contenttypes	updatecontenttype	f		2	\N	\N
61	email	email	send	t		1	\N	\N
62	email	email	send	f		2	\N	\N
67	upload	upload	count	t		1	\N	\N
68	upload	upload	count	f		2	\N	\N
69	upload	upload	destroy	t		1	\N	\N
70	upload	upload	destroy	f		2	\N	\N
71	upload	upload	find	t		1	\N	\N
72	upload	upload	find	f		2	\N	\N
73	upload	upload	findone	t		1	\N	\N
74	upload	upload	findone	f		2	\N	\N
75	upload	upload	getsettings	t		1	\N	\N
76	upload	upload	getsettings	f		2	\N	\N
77	upload	upload	search	t		1	\N	\N
78	upload	upload	search	f		2	\N	\N
79	upload	upload	search	f		1	\N	\N
80	upload	upload	search	f		2	\N	\N
81	upload	upload	updatesettings	t		1	\N	\N
82	upload	upload	updatesettings	f		2	\N	\N
83	upload	upload	upload	t		1	\N	\N
84	upload	upload	upload	f		2	\N	\N
85	users-permissions	auth	callback	t		1	\N	\N
86	users-permissions	auth	callback	t		2	\N	\N
89	users-permissions	auth	connect	t		1	\N	\N
90	users-permissions	auth	connect	t		2	\N	\N
91	users-permissions	auth	emailconfirmation	t		1	\N	\N
92	users-permissions	auth	emailconfirmation	t		2	\N	\N
93	users-permissions	auth	forgotpassword	t		1	\N	\N
94	upload	upload	updatesettings	f		1	\N	\N
95	upload	upload	updatesettings	f		2	\N	\N
96	upload	upload	upload	f		1	\N	\N
97	upload	upload	upload	f		2	\N	\N
98	users-permissions	auth	callback	f		1	\N	\N
99	users-permissions	auth	callback	t		2	\N	\N
102	users-permissions	auth	connect	t		1	\N	\N
103	users-permissions	auth	connect	t		2	\N	\N
104	users-permissions	auth	emailconfirmation	f		1	\N	\N
105	users-permissions	auth	emailconfirmation	t		2	\N	\N
106	users-permissions	auth	forgotpassword	f		1	\N	\N
107	users-permissions	auth	forgotpassword	t		2	\N	\N
108	users-permissions	auth	register	t		1	\N	\N
109	users-permissions	auth	register	t		2	\N	\N
110	users-permissions	auth	sendemailconfirmation	t		1	\N	\N
111	users-permissions	auth	sendemailconfirmation	f		2	\N	\N
112	users-permissions	user	create	t		1	\N	\N
113	users-permissions	user	create	f		2	\N	\N
114	users-permissions	user	destroy	t		1	\N	\N
115	users-permissions	user	destroy	f		2	\N	\N
116	users-permissions	user	destroyall	t		1	\N	\N
117	users-permissions	user	destroyall	f		2	\N	\N
118	users-permissions	user	find	t		1	\N	\N
119	users-permissions	user	find	f		2	\N	\N
120	users-permissions	user	findone	t		1	\N	\N
121	users-permissions	user	findone	f		2	\N	\N
122	users-permissions	user	me	t		1	\N	\N
123	users-permissions	user	me	t		2	\N	\N
124	users-permissions	user	update	t		1	\N	\N
125	users-permissions	user	update	f		2	\N	\N
126	users-permissions	userspermissions	createrole	t		1	\N	\N
127	users-permissions	userspermissions	createrole	f		2	\N	\N
130	users-permissions	userspermissions	deleterole	t		1	\N	\N
131	users-permissions	userspermissions	deleterole	f		2	\N	\N
132	users-permissions	userspermissions	getadvancedsettings	t		1	\N	\N
133	users-permissions	userspermissions	getadvancedsettings	f		2	\N	\N
134	users-permissions	userspermissions	getemailtemplate	t		1	\N	\N
135	users-permissions	userspermissions	getemailtemplate	f		2	\N	\N
136	users-permissions	userspermissions	getpermissions	t		1	\N	\N
137	users-permissions	userspermissions	getpermissions	f		2	\N	\N
138	users-permissions	userspermissions	getpolicies	t		1	\N	\N
139	users-permissions	userspermissions	getpolicies	f		2	\N	\N
140	users-permissions	userspermissions	getproviders	t		1	\N	\N
141	users-permissions	userspermissions	getproviders	f		2	\N	\N
142	users-permissions	userspermissions	getrole	t		1	\N	\N
143	users-permissions	userspermissions	getrole	f		2	\N	\N
144	users-permissions	userspermissions	getroles	t		1	\N	\N
145	users-permissions	userspermissions	getroles	f		2	\N	\N
146	users-permissions	userspermissions	getroutes	t		1	\N	\N
147	users-permissions	userspermissions	getroutes	f		2	\N	\N
148	users-permissions	userspermissions	index	t		1	\N	\N
149	users-permissions	userspermissions	index	f		2	\N	\N
152	users-permissions	userspermissions	searchusers	t		1	\N	\N
153	users-permissions	userspermissions	searchusers	f		2	\N	\N
154	users-permissions	userspermissions	updateadvancedsettings	t		1	\N	\N
155	users-permissions	userspermissions	updateadvancedsettings	f		2	\N	\N
156	users-permissions	userspermissions	updateemailtemplate	t		1	\N	\N
157	users-permissions	userspermissions	updateemailtemplate	f		2	\N	\N
158	users-permissions	userspermissions	updateproviders	t		1	\N	\N
159	users-permissions	userspermissions	updateproviders	f		2	\N	\N
160	users-permissions	userspermissions	updaterole	t		1	\N	\N
161	users-permissions	userspermissions	updaterole	f		2	\N	\N
162	application	articles	count	t		1	\N	\N
163	application	articles	count	t		2	\N	\N
164	application	articles	create	t		1	\N	\N
165	application	articles	create	f		2	\N	\N
166	application	articles	delete	t		1	\N	\N
167	application	articles	delete	f		2	\N	\N
168	application	articles	find	t		1	\N	\N
169	application	articles	find	t		2	\N	\N
170	application	articles	findone	t		1	\N	\N
171	application	articles	findone	t		2	\N	\N
172	application	articles	update	t		1	\N	\N
173	application	articles	update	f		2	\N	\N
174	application	healthcheck	check	t		1	\N	\N
175	application	healthcheck	check	t		2	\N	\N
190	application	likes	count	f		1	\N	\N
191	application	likes	count	t		2	\N	\N
192	application	likes	create	f		1	\N	\N
193	application	likes	create	t		2	\N	\N
194	application	likes	delete	f		1	\N	\N
195	application	likes	delete	f		2	\N	\N
196	application	likes	find	f		1	\N	\N
197	application	likes	find	f		2	\N	\N
198	application	likes	findone	f		1	\N	\N
199	application	likes	findone	f		2	\N	\N
200	application	likes	update	f		1	\N	\N
201	application	likes	update	t		2	\N	\N
202	application	likes	validate	f		1	\N	\N
203	application	likes	validate	f		2	\N	\N
204	application	sessions	count	f		1	\N	\N
205	application	sessions	count	f		2	\N	\N
206	application	sessions	create	f		1	\N	\N
207	application	sessions	create	f		2	\N	\N
208	application	sessions	delete	f		1	\N	\N
209	application	sessions	delete	f		2	\N	\N
210	application	sessions	find	f		1	\N	\N
211	application	sessions	find	f		2	\N	\N
212	application	sessions	findone	f		1	\N	\N
213	application	sessions	findone	f		2	\N	\N
214	application	sessions	update	f		1	\N	\N
215	application	sessions	update	f		2	\N	\N
216	application	sessions	validate	f		1	\N	\N
217	application	sessions	validate	f		2	\N	\N
218	content-manager	contentmanager	findrelationlist	f		1	\N	\N
219	content-manager	contentmanager	findrelationlist	f		2	\N	\N
220	content-manager	contentmanager	unpublish	f		1	\N	\N
221	content-manager	contentmanager	unpublish	f		2	\N	\N
222	content-type-builder	builder	getreservednames	f		1	\N	\N
223	content-manager	contentmanager	publish	f		1	\N	\N
224	content-manager	contentmanager	publish	f		2	\N	\N
225	content-type-builder	builder	getreservednames	f		2	\N	\N
226	users-permissions	auth	resetpassword	f		1	\N	\N
227	users-permissions	auth	resetpassword	t		2	\N	\N
228	users-permissions	user	count	f		1	\N	\N
229	users-permissions	user	count	f		2	\N	\N
\.


--
-- Data for Name: users-permissions_role; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public."users-permissions_role" (id, name, description, type, created_by, updated_by) FROM stdin;
1	Authenticated	Default role given to authenticated user.	authenticated	\N	\N
2	Public	Default role given to unauthenticated user.	public	\N	\N
\.


--
-- Data for Name: users-permissions_user; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public."users-permissions_user" (id, username, email, provider, password, "resetPasswordToken", confirmed, blocked, role, created_at, updated_at, "confirmationToken", created_by, updated_by) FROM stdin;
\.


--
-- Name: articles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.articles_id_seq', 4, false);


--
-- Name: core_store_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.core_store_id_seq', 45, true);


--
-- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.likes_id_seq', 39, false);


--
-- Name: sessions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.sessions_id_seq', 1, false);


--
-- Name: strapi_administrator_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.strapi_administrator_id_seq', 2, false);


--
-- Name: strapi_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.strapi_permission_id_seq', 85, true);


--
-- Name: strapi_role_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.strapi_role_id_seq', 3, true);


--
-- Name: strapi_users_roles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.strapi_users_roles_id_seq', 1, true);


--
-- Name: strapi_webhooks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.strapi_webhooks_id_seq', 1, false);


--
-- Name: upload_file_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.upload_file_id_seq', 21, false);


--
-- Name: upload_file_morph_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.upload_file_morph_id_seq', 89, false);


--
-- Name: users-permissions_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public."users-permissions_permission_id_seq"', 229, true);


--
-- Name: users-permissions_role_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public."users-permissions_role_id_seq"', 3, false);


--
-- Name: users-permissions_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public."users-permissions_user_id_seq"', 1, false);


--
-- Name: articles articles_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.articles
    ADD CONSTRAINT articles_pkey PRIMARY KEY (id);


--
-- Name: core_store core_store_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.core_store
    ADD CONSTRAINT core_store_pkey PRIMARY KEY (id);


--
-- Name: likes likes_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.likes
    ADD CONSTRAINT likes_pkey PRIMARY KEY (id);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: strapi_administrator strapi_administrator_email_unique; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_administrator
    ADD CONSTRAINT strapi_administrator_email_unique UNIQUE (email);


--
-- Name: strapi_administrator strapi_administrator_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_administrator
    ADD CONSTRAINT strapi_administrator_pkey PRIMARY KEY (id);


--
-- Name: strapi_permission strapi_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_permission
    ADD CONSTRAINT strapi_permission_pkey PRIMARY KEY (id);


--
-- Name: strapi_role strapi_role_code_unique; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_role
    ADD CONSTRAINT strapi_role_code_unique UNIQUE (code);


--
-- Name: strapi_role strapi_role_name_unique; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_role
    ADD CONSTRAINT strapi_role_name_unique UNIQUE (name);


--
-- Name: strapi_role strapi_role_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_role
    ADD CONSTRAINT strapi_role_pkey PRIMARY KEY (id);


--
-- Name: strapi_users_roles strapi_users_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_users_roles
    ADD CONSTRAINT strapi_users_roles_pkey PRIMARY KEY (id);


--
-- Name: strapi_webhooks strapi_webhooks_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.strapi_webhooks
    ADD CONSTRAINT strapi_webhooks_pkey PRIMARY KEY (id);


--
-- Name: upload_file_morph upload_file_morph_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.upload_file_morph
    ADD CONSTRAINT upload_file_morph_pkey PRIMARY KEY (id);


--
-- Name: upload_file upload_file_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.upload_file
    ADD CONSTRAINT upload_file_pkey PRIMARY KEY (id);


--
-- Name: users-permissions_permission users-permissions_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public."users-permissions_permission"
    ADD CONSTRAINT "users-permissions_permission_pkey" PRIMARY KEY (id);


--
-- Name: users-permissions_role users-permissions_role_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public."users-permissions_role"
    ADD CONSTRAINT "users-permissions_role_pkey" PRIMARY KEY (id);


--
-- Name: users-permissions_user users-permissions_user_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public."users-permissions_user"
    ADD CONSTRAINT "users-permissions_user_pkey" PRIMARY KEY (id);


--
-- Name: articles_uuid_unique; Type: INDEX; Schema: public; Owner: root
--

CREATE UNIQUE INDEX articles_uuid_unique ON public.articles USING btree (uuid);


--
-- Name: likes_session_unique; Type: INDEX; Schema: public; Owner: root
--

CREATE UNIQUE INDEX likes_session_unique ON public.likes USING btree (session);


--
-- Name: sessions_ip_address_unique; Type: INDEX; Schema: public; Owner: root
--

CREATE UNIQUE INDEX sessions_ip_address_unique ON public.sessions USING btree (ip_address);


--
-- Name: sessions_uuid_unique; Type: INDEX; Schema: public; Owner: root
--

CREATE UNIQUE INDEX sessions_uuid_unique ON public.sessions USING btree (uuid);


--
-- Name: strapi_administrator_username_unique; Type: INDEX; Schema: public; Owner: root
--

CREATE UNIQUE INDEX strapi_administrator_username_unique ON public.strapi_administrator USING btree (username);


--
-- Name: users-permissions_role_type_unique; Type: INDEX; Schema: public; Owner: root
--

CREATE UNIQUE INDEX "users-permissions_role_type_unique" ON public."users-permissions_role" USING btree (type);


--
-- Name: users-permissions_user_username_unique; Type: INDEX; Schema: public; Owner: root
--

CREATE UNIQUE INDEX "users-permissions_user_username_unique" ON public."users-permissions_user" USING btree (username);


--
-- PostgreSQL database dump complete
--

