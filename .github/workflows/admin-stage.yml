name: admin-stage

on:
  push:
    branches:
      - develop
    paths:
      - ".github/workflows/admin-stage.yml"
      - "src/admin/**"
      - "ops/docker/admin/**"
      - "ops/kubernetes/deployments/admin/**"

env:
  DOCKER_IMAGE_NAME: blog-admin
  DOCKER_REPO: edenr/blog-admin
  DEPLOYMENT_NAME: blog-admin
  DEPLOYMENT_VERSION: ${{ github.run_number }}
  SERVERS: k8s-master k8s-node1 k8s-node2 k8s-node3

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@master
      - name: Docker Build
        run: |
          DOCKER_BUILDKIT=1 docker build \
            --target stage \
            --build-arg APP_ENV=stage \
            -t ${{ env.DOCKER_REPO }}:${{ env.DEPLOYMENT_VERSION }} \
            -t ${{ env.DOCKER_REPO }}:latest \
            --cache-from ${{ env.DOCKER_REPO }}:latest \
            -f ops/docker/admin/Dockerfile .
  push:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p '${{ secrets.DOCKER_PASSWORD }}'
      - name: Docker Push
        run: |
          docker push ${{ env.DOCKER_REPO }}:${{ env.DEPLOYMENT_VERSION }}
          docker push ${{ env.DOCKER_REPO }}:latest
  deploy:
    runs-on: self-hosted
    needs: push
    steps:
      - uses: actions/checkout@master
      - name: Deploy to Kubernetes
        run: |
          kubectl config use-context stage
          kubectl apply -f ops/kubernetes/deployments/admin/
          kubectl patch deployment ${{ env.DEPLOYMENT_NAME }} -p '{"spec":{"template":{"spec":{"containers":[{"name":"${{ env.DOCKER_IMAGE_NAME }}","image":"${{ env.DOCKER_REPO }}:${{ env.DEPLOYMENT_VERSION }}"}]}}}}'
  cleanup:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Remove all images from github-runner
        run: docker rmi -f $(docker images -q) 2> /dev/null || true
      - name: Keep 5 Releases
        run: for server in $(echo ${{ env.SERVERS }} | xargs); do ssh $server ./scripts/cleanup.sh ${{ env.DOCKER_REPO }}; done
      - name: Remove Dangling Docker Images
        run: docker system prune -f
