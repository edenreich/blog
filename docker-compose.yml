version: "3.7"

services:
  ingress:
    build:
      context: .
      dockerfile: ops/docker/ingress/Dockerfile
    volumes:
      - ./ops/docker/helpers/openssl/certs:/etc/nginx/certs:ro
    ports:
      - 80:80
      - 443:443
    networks:
      app:
        aliases:
          - eden-reich.com
          - dev.eden-reich.com
          - dev-admin.eden-reich.com
    depends_on:
      - openssl

  frontend:
    build:
      target: development
      context: .
      dockerfile: ops/docker/frontend/Dockerfile
    environment:
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
    volumes:
      - ./src/frontend:/app:rw
    networks:
      - app

  admin:
    build:
      target: development
      args:
        NODE_ENV: development
      context: .
      dockerfile: ops/docker/backend/admin/Dockerfile
    volumes:
      - ./src/backend/admin:/app:rw
    networks:
      - app

  api:
    build:
      target: development
      context: .
      dockerfile: ops/docker/backend/api/Dockerfile
    volumes:
      - ./src/backend/api:/var/www/api:rw
    extra_hosts:
      - host.docker.internal:172.18.0.1
    networks:
      - app

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: blog
    ports:
      - 5432:5432
    networks:
      - app
    volumes:
      - ./src/backend/admin/database:/docker-entrypoint-initdb.d
      - database-data:/var/lib/postgresql/data

  openssl:
    build:
      context: .
      dockerfile: ops/docker/helpers/openssl/Dockerfile
    volumes:
      - ./ops/docker/helpers/openssl/certs:/root/certs:rw

  npm:
    image: node:15.2.1-buster-slim
    command:
      - /bin/bash
      - -c
      - |
        if [ ! -d /frontend/node_modules ]; then
          apt-get update;
          apt-get install -y build-essential python;
          yarn upgrade && yarn;
        fi
        if [ ! -d /admin/node_modules ]; then 
          apt-get update apt-get install -y build-essential python;
          cd /admin;
          yarn upgrade && yarn;
        fi
    working_dir: /frontend
    volumes:
      - ./src/frontend:/frontend:rw
      - ./src/backend/admin:/admin:rw

  composer:
    image: composer
    command: composer install
    working_dir: /var/www/api
    volumes:
     - ./src/backend/api:/var/www/api:rw

volumes:
  database-data:

networks:
  app:
